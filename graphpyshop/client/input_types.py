# Generated by ariadne-codegen
# Source: https://clean-kitchen-meal-kits.myshopify.com/admin/api/unstable/graphql.json

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AppPricingInterval,
    CatalogStatus,
    CheckoutBrandingBackground,
    CheckoutBrandingBackgroundStyle,
    CheckoutBrandingBorder,
    CheckoutBrandingBorderStyle,
    CheckoutBrandingBorderWidth,
    CheckoutBrandingCartLinkContentType,
    CheckoutBrandingColorSchemeSelection,
    CheckoutBrandingColorSelection,
    CheckoutBrandingCornerRadius,
    CheckoutBrandingFontLoadingStrategy,
    CheckoutBrandingFooterAlignment,
    CheckoutBrandingFooterPosition,
    CheckoutBrandingGlobalCornerRadius,
    CheckoutBrandingHeaderAlignment,
    CheckoutBrandingHeaderPosition,
    CheckoutBrandingLabelPosition,
    CheckoutBrandingShadow,
    CheckoutBrandingSimpleBorder,
    CheckoutBrandingSpacing,
    CheckoutBrandingSpacingKeyword,
    CheckoutBrandingTypographyFont,
    CheckoutBrandingTypographyKerning,
    CheckoutBrandingTypographyLetterCase,
    CheckoutBrandingTypographySize,
    CheckoutBrandingTypographyWeight,
    CheckoutBrandingVisibility,
    CollectionRuleColumn,
    CollectionRuleRelation,
    CollectionSortOrder,
    CombinedListingsRole,
    CountryCode,
    CropRegion,
    CurrencyCode,
    CustomerEmailMarketingState,
    CustomerMarketingOptInLevel,
    CustomerSmsMarketingState,
    DeliveryConditionField,
    DeliveryConditionOperator,
    DeliveryLocalPickupTime,
    DraftOrderAppliedDiscountType,
    FileContentType,
    FileCreateInputDuplicateResolutionMode,
    FulfillmentEventStatus,
    FulfillmentHoldReason,
    ImageContentType,
    LanguageCode,
    LengthUnit,
    LocalizationExtensionKey,
    MarketingActivityExternalStatus,
    MarketingActivityHierarchyLevel,
    MarketingActivityStatus,
    MarketingBudgetBudgetType,
    MarketingChannel,
    MarketingTactic,
    MarketplacePaymentsFeatureType,
    MediaContentType,
    MetafieldAdminAccess,
    MetafieldCustomerAccountAccess,
    MetafieldGrantAccessLevel,
    MetafieldOwnerType,
    MetafieldStorefrontAccess,
    MetaobjectAdminAccess,
    MetaobjectStatus,
    MetaobjectStorefrontAccess,
    OrderTransactionKind,
    PriceCalculationType,
    PriceListAdjustmentType,
    PriceListCompareAtMode,
    PriceRuleAllocationMethod,
    PriceRuleTarget,
    PrivacyCountryCode,
    PrivacyRegionCode,
    PrivateMetafieldValueType,
    ProductStatus,
    ProductVariantInventoryPolicy,
    PublicationCreateInputPublicationDefaultState,
    RefundDutyRefundType,
    RefundLineItemRestockType,
    ResourceFeedbackState,
    ReturnDeclineReason,
    ReturnReason,
    ReverseFulfillmentOrderDispositionType,
    RiskAssessmentResult,
    RiskFactSentiment,
    ScriptTagDisplayScope,
    SearchResultType,
    SellingPlanAnchorType,
    SellingPlanCategory,
    SellingPlanCheckoutChargeType,
    SellingPlanFixedDeliveryPolicyIntent,
    SellingPlanFixedDeliveryPolicyPreAnchorBehavior,
    SellingPlanFulfillmentTrigger,
    SellingPlanInterval,
    SellingPlanPricingPolicyAdjustmentType,
    SellingPlanRecurringDeliveryPolicyIntent,
    SellingPlanRecurringDeliveryPolicyPreAnchorBehavior,
    SellingPlanRemainingBalanceChargeTrigger,
    SellingPlanReserve,
    ShippingPackageType,
    ShopPolicyType,
    StagedUploadHttpMethodType,
    StagedUploadTargetGenerateUploadResource,
    SubscriptionBillingCycleScheduleEditInputScheduleEditReason,
    SubscriptionContractSubscriptionStatus,
    TaxExemption,
    WebhookSubscriptionFormat,
    WeightUnit,
)


class AppPlanInput(BaseModel):
    app_usage_pricing_details: Optional["AppUsagePricingInput"] = Field(
        alias="appUsagePricingDetails", default=None
    )
    app_recurring_pricing_details: Optional["AppRecurringPricingInput"] = Field(
        alias="appRecurringPricingDetails", default=None
    )


class AppRecurringPricingInput(BaseModel):
    interval: Optional[AppPricingInterval] = None
    price: "MoneyInput"
    discount: Optional["AppSubscriptionDiscountInput"] = None


class AppSubscriptionDiscountInput(BaseModel):
    value: Optional["AppSubscriptionDiscountValueInput"] = None
    duration_limit_in_intervals: Optional[int] = Field(
        alias="durationLimitInIntervals", default=None
    )


class AppSubscriptionDiscountValueInput(BaseModel):
    percentage: Optional[float] = None
    amount: Optional[Any] = None


class AppSubscriptionLineItemInput(BaseModel):
    plan: "AppPlanInput"


class AppUsagePricingInput(BaseModel):
    capped_amount: "MoneyInput" = Field(alias="cappedAmount")
    terms: str


class AttributeInput(BaseModel):
    key: str
    value: str


class BuyerExperienceConfigurationInput(BaseModel):
    checkout_to_draft: Optional[bool] = Field(alias="checkoutToDraft", default=None)
    payment_terms_template_id: Optional[str] = Field(
        alias="paymentTermsTemplateId", default=None
    )
    editable_shipping_address: Optional[bool] = Field(
        alias="editableShippingAddress", default=None
    )


class CalculateExchangeLineItemInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    quantity: int
    applied_discount: Optional["ExchangeLineItemAppliedDiscountInput"] = Field(
        alias="appliedDiscount", default=None
    )


class CalculateReturnInput(BaseModel):
    order_id: str = Field(alias="orderId")
    return_line_items: Optional[List["CalculateReturnLineItemInput"]] = Field(
        alias="returnLineItems", default=None
    )
    exchange_line_items: Optional[List["CalculateExchangeLineItemInput"]] = Field(
        alias="exchangeLineItems", default=None
    )
    return_shipping_fee: Optional["ReturnShippingFeeInput"] = Field(
        alias="returnShippingFee", default=None
    )


class CalculateReturnLineItemInput(BaseModel):
    fulfillment_line_item_id: str = Field(alias="fulfillmentLineItemId")
    restocking_fee: Optional["RestockingFeeInput"] = Field(
        alias="restockingFee", default=None
    )
    quantity: int


class CatalogContextInput(BaseModel):
    company_location_ids: Optional[List[str]] = Field(
        alias="companyLocationIds", default=None
    )


class CatalogCreateInput(BaseModel):
    title: str
    status: CatalogStatus
    context: "CatalogContextInput"
    price_list_id: Optional[str] = Field(alias="priceListId", default=None)
    publication_id: Optional[str] = Field(alias="publicationId", default=None)


class CatalogUpdateInput(BaseModel):
    title: Optional[str] = None
    status: Optional[CatalogStatus] = None
    context: Optional["CatalogContextInput"] = None
    price_list_id: Optional[str] = Field(alias="priceListId", default=None)
    publication_id: Optional[str] = Field(alias="publicationId", default=None)


class CheckoutBrandingButtonColorRolesInput(BaseModel):
    background: Optional[str] = None
    text: Optional[str] = None
    border: Optional[str] = None
    icon: Optional[str] = None
    accent: Optional[str] = None
    decorative: Optional[str] = None
    hover: Optional["CheckoutBrandingColorRolesInput"] = None


class CheckoutBrandingButtonInput(BaseModel):
    background: Optional[CheckoutBrandingBackgroundStyle] = None
    border: Optional[CheckoutBrandingSimpleBorder] = None
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )
    block_padding: Optional[CheckoutBrandingSpacing] = Field(
        alias="blockPadding", default=None
    )
    inline_padding: Optional[CheckoutBrandingSpacing] = Field(
        alias="inlinePadding", default=None
    )
    typography: Optional["CheckoutBrandingTypographyStyleInput"] = None


class CheckoutBrandingBuyerJourneyInput(BaseModel):
    visibility: Optional[CheckoutBrandingVisibility] = None


class CheckoutBrandingCartLinkInput(BaseModel):
    visibility: Optional[CheckoutBrandingVisibility] = None


class CheckoutBrandingCheckboxInput(BaseModel):
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )


class CheckoutBrandingChoiceListGroupInput(BaseModel):
    spacing: Optional[CheckoutBrandingSpacingKeyword] = None


class CheckoutBrandingChoiceListInput(BaseModel):
    group: Optional["CheckoutBrandingChoiceListGroupInput"] = None


class CheckoutBrandingColorGlobalInput(BaseModel):
    info: Optional[str] = None
    success: Optional[str] = None
    warning: Optional[str] = None
    critical: Optional[str] = None
    brand: Optional[str] = None
    accent: Optional[str] = None
    decorative: Optional[str] = None


class CheckoutBrandingColorGroupInput(BaseModel):
    accent: Optional[str] = None
    background: Optional[str] = None
    foreground: Optional[str] = None


class CheckoutBrandingColorPaletteInput(BaseModel):
    canvas: Optional["CheckoutBrandingColorGroupInput"] = None
    primary: Optional["CheckoutBrandingColorGroupInput"] = None
    interactive: Optional["CheckoutBrandingColorGroupInput"] = None
    critical: Optional["CheckoutBrandingColorGroupInput"] = None
    color_1: Optional["CheckoutBrandingColorGroupInput"] = Field(
        alias="color1", default=None
    )
    color_2: Optional["CheckoutBrandingColorGroupInput"] = Field(
        alias="color2", default=None
    )


class CheckoutBrandingColorRolesInput(BaseModel):
    background: Optional[str] = None
    text: Optional[str] = None
    border: Optional[str] = None
    icon: Optional[str] = None
    accent: Optional[str] = None
    decorative: Optional[str] = None


class CheckoutBrandingColorSchemeInput(BaseModel):
    base: Optional["CheckoutBrandingColorRolesInput"] = None
    control: Optional["CheckoutBrandingControlColorRolesInput"] = None
    primary_button: Optional["CheckoutBrandingButtonColorRolesInput"] = Field(
        alias="primaryButton", default=None
    )
    secondary_button: Optional["CheckoutBrandingButtonColorRolesInput"] = Field(
        alias="secondaryButton", default=None
    )


class CheckoutBrandingColorSchemesInput(BaseModel):
    scheme_1: Optional["CheckoutBrandingColorSchemeInput"] = Field(
        alias="scheme1", default=None
    )
    scheme_2: Optional["CheckoutBrandingColorSchemeInput"] = Field(
        alias="scheme2", default=None
    )
    scheme_3: Optional["CheckoutBrandingColorSchemeInput"] = Field(
        alias="scheme3", default=None
    )
    scheme_4: Optional["CheckoutBrandingColorSchemeInput"] = Field(
        alias="scheme4", default=None
    )


class CheckoutBrandingColorsInput(BaseModel):
    global_: Optional["CheckoutBrandingColorGlobalInput"] = Field(
        alias="global", default=None
    )
    schemes: Optional["CheckoutBrandingColorSchemesInput"] = None


class CheckoutBrandingControlColorRolesInput(BaseModel):
    background: Optional[str] = None
    text: Optional[str] = None
    border: Optional[str] = None
    icon: Optional[str] = None
    accent: Optional[str] = None
    decorative: Optional[str] = None
    selected: Optional["CheckoutBrandingColorRolesInput"] = None


class CheckoutBrandingControlInput(BaseModel):
    color: Optional[CheckoutBrandingColorSelection] = None
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )
    border: Optional[CheckoutBrandingSimpleBorder] = None
    label_position: Optional[CheckoutBrandingLabelPosition] = Field(
        alias="labelPosition", default=None
    )


class CheckoutBrandingCornerRadiusVariablesInput(BaseModel):
    small: Optional[int] = None
    base: Optional[int] = None
    large: Optional[int] = None


class CheckoutBrandingCustomFontGroupInput(BaseModel):
    base: "CheckoutBrandingCustomFontInput"
    bold: "CheckoutBrandingCustomFontInput"
    loading_strategy: Optional[CheckoutBrandingFontLoadingStrategy] = Field(
        alias="loadingStrategy", default=None
    )


class CheckoutBrandingCustomFontInput(BaseModel):
    weight: int
    generic_file_id: str = Field(alias="genericFileId")


class CheckoutBrandingCustomizationsInput(BaseModel):
    global_: Optional["CheckoutBrandingGlobalInput"] = Field(
        alias="global", default=None
    )
    header: Optional["CheckoutBrandingHeaderInput"] = None
    heading_level_1: Optional["CheckoutBrandingHeadingLevelInput"] = Field(
        alias="headingLevel1", default=None
    )
    heading_level_2: Optional["CheckoutBrandingHeadingLevelInput"] = Field(
        alias="headingLevel2", default=None
    )
    heading_level_3: Optional["CheckoutBrandingHeadingLevelInput"] = Field(
        alias="headingLevel3", default=None
    )
    footer: Optional["CheckoutBrandingFooterInput"] = None
    main: Optional["CheckoutBrandingMainInput"] = None
    order_summary: Optional["CheckoutBrandingOrderSummaryInput"] = Field(
        alias="orderSummary", default=None
    )
    control: Optional["CheckoutBrandingControlInput"] = None
    text_field: Optional["CheckoutBrandingTextFieldInput"] = Field(
        alias="textField", default=None
    )
    checkbox: Optional["CheckoutBrandingCheckboxInput"] = None
    select: Optional["CheckoutBrandingSelectInput"] = None
    primary_button: Optional["CheckoutBrandingButtonInput"] = Field(
        alias="primaryButton", default=None
    )
    secondary_button: Optional["CheckoutBrandingButtonInput"] = Field(
        alias="secondaryButton", default=None
    )
    favicon: Optional["CheckoutBrandingImageInput"] = None
    choice_list: Optional["CheckoutBrandingChoiceListInput"] = Field(
        alias="choiceList", default=None
    )
    merchandise_thumbnail: Optional[
        "CheckoutBrandingMerchandiseThumbnailInput"
    ] = Field(alias="merchandiseThumbnail", default=None)
    express_checkout: Optional["CheckoutBrandingExpressCheckoutInput"] = Field(
        alias="expressCheckout", default=None
    )
    buyer_journey: Optional["CheckoutBrandingBuyerJourneyInput"] = Field(
        alias="buyerJourney", default=None
    )
    cart_link: Optional["CheckoutBrandingCartLinkInput"] = Field(
        alias="cartLink", default=None
    )


class CheckoutBrandingDesignSystemInput(BaseModel):
    colors: Optional["CheckoutBrandingColorsInput"] = None
    typography: Optional["CheckoutBrandingTypographyInput"] = None
    corner_radius: Optional["CheckoutBrandingCornerRadiusVariablesInput"] = Field(
        alias="cornerRadius", default=None
    )


class CheckoutBrandingExpressCheckoutButtonInput(BaseModel):
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )


class CheckoutBrandingExpressCheckoutInput(BaseModel):
    button: Optional["CheckoutBrandingExpressCheckoutButtonInput"] = None


class CheckoutBrandingFontGroupInput(BaseModel):
    shopify_font_group: Optional["CheckoutBrandingShopifyFontGroupInput"] = Field(
        alias="shopifyFontGroup", default=None
    )
    custom_font_group: Optional["CheckoutBrandingCustomFontGroupInput"] = Field(
        alias="customFontGroup", default=None
    )


class CheckoutBrandingFontSizeInput(BaseModel):
    base: Optional[float] = None
    ratio: Optional[float] = None


class CheckoutBrandingFooterContentInput(BaseModel):
    visibility: Optional[CheckoutBrandingVisibility] = None


class CheckoutBrandingFooterInput(BaseModel):
    position: Optional[CheckoutBrandingFooterPosition] = None
    divided: Optional[bool] = None
    alignment: Optional[CheckoutBrandingFooterAlignment] = None
    content: Optional["CheckoutBrandingFooterContentInput"] = None
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background: Optional[CheckoutBrandingBackground] = None
    padding: Optional[CheckoutBrandingSpacingKeyword] = None


class CheckoutBrandingGlobalInput(BaseModel):
    corner_radius: Optional[CheckoutBrandingGlobalCornerRadius] = Field(
        alias="cornerRadius", default=None
    )
    typography: Optional["CheckoutBrandingTypographyStyleGlobalInput"] = None


class CheckoutBrandingHeaderCartLinkInput(BaseModel):
    content_type: Optional[CheckoutBrandingCartLinkContentType] = Field(
        alias="contentType", default=None
    )
    image: Optional["CheckoutBrandingImageInput"] = None


class CheckoutBrandingHeaderInput(BaseModel):
    alignment: Optional[CheckoutBrandingHeaderAlignment] = None
    position: Optional[CheckoutBrandingHeaderPosition] = None
    logo: Optional["CheckoutBrandingLogoInput"] = None
    banner: Optional["CheckoutBrandingImageInput"] = None
    divided: Optional[bool] = None
    cart_link: Optional["CheckoutBrandingHeaderCartLinkInput"] = Field(
        alias="cartLink", default=None
    )
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background: Optional[CheckoutBrandingBackground] = None
    padding: Optional[CheckoutBrandingSpacingKeyword] = None


class CheckoutBrandingHeadingLevelInput(BaseModel):
    typography: Optional["CheckoutBrandingTypographyStyleInput"] = None


class CheckoutBrandingImageInput(BaseModel):
    media_image_id: Optional[str] = Field(alias="mediaImageId", default=None)


class CheckoutBrandingInput(BaseModel):
    design_system: Optional["CheckoutBrandingDesignSystemInput"] = Field(
        alias="designSystem", default=None
    )
    customizations: Optional["CheckoutBrandingCustomizationsInput"] = None


class CheckoutBrandingLogoInput(BaseModel):
    image: Optional["CheckoutBrandingImageInput"] = None
    max_width: Optional[int] = Field(alias="maxWidth", default=None)
    visibility: Optional[CheckoutBrandingVisibility] = None


class CheckoutBrandingMainInput(BaseModel):
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background_image: Optional["CheckoutBrandingImageInput"] = Field(
        alias="backgroundImage", default=None
    )
    section: Optional["CheckoutBrandingMainSectionInput"] = None


class CheckoutBrandingMainSectionInput(BaseModel):
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background: Optional[CheckoutBrandingBackground] = None
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )
    border: Optional[CheckoutBrandingSimpleBorder] = None
    border_style: Optional[CheckoutBrandingBorderStyle] = Field(
        alias="borderStyle", default=None
    )
    border_width: Optional[CheckoutBrandingBorderWidth] = Field(
        alias="borderWidth", default=None
    )
    shadow: Optional[CheckoutBrandingShadow] = None
    padding: Optional[CheckoutBrandingSpacingKeyword] = None


class CheckoutBrandingMerchandiseThumbnailInput(BaseModel):
    border: Optional[CheckoutBrandingSimpleBorder] = None
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )


class CheckoutBrandingOrderSummaryInput(BaseModel):
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background_image: Optional["CheckoutBrandingImageInput"] = Field(
        alias="backgroundImage", default=None
    )
    section: Optional["CheckoutBrandingOrderSummarySectionInput"] = None


class CheckoutBrandingOrderSummarySectionInput(BaseModel):
    color_scheme: Optional[CheckoutBrandingColorSchemeSelection] = Field(
        alias="colorScheme", default=None
    )
    background: Optional[CheckoutBrandingBackground] = None
    corner_radius: Optional[CheckoutBrandingCornerRadius] = Field(
        alias="cornerRadius", default=None
    )
    border: Optional[CheckoutBrandingSimpleBorder] = None
    border_style: Optional[CheckoutBrandingBorderStyle] = Field(
        alias="borderStyle", default=None
    )
    border_width: Optional[CheckoutBrandingBorderWidth] = Field(
        alias="borderWidth", default=None
    )
    shadow: Optional[CheckoutBrandingShadow] = None
    padding: Optional[CheckoutBrandingSpacingKeyword] = None


class CheckoutBrandingSelectInput(BaseModel):
    border: Optional[CheckoutBrandingBorder] = None
    typography: Optional["CheckoutBrandingTypographyStyleInput"] = None


class CheckoutBrandingShopifyFontGroupInput(BaseModel):
    name: str
    base_weight: Optional[int] = Field(alias="baseWeight", default=None)
    bold_weight: Optional[int] = Field(alias="boldWeight", default=None)
    loading_strategy: Optional[CheckoutBrandingFontLoadingStrategy] = Field(
        alias="loadingStrategy", default=None
    )


class CheckoutBrandingTextFieldInput(BaseModel):
    border: Optional[CheckoutBrandingBorder] = None
    typography: Optional["CheckoutBrandingTypographyStyleInput"] = None


class CheckoutBrandingTypographyInput(BaseModel):
    size: Optional["CheckoutBrandingFontSizeInput"] = None
    primary: Optional["CheckoutBrandingFontGroupInput"] = None
    secondary: Optional["CheckoutBrandingFontGroupInput"] = None


class CheckoutBrandingTypographyStyleGlobalInput(BaseModel):
    letter_case: Optional[CheckoutBrandingTypographyLetterCase] = Field(
        alias="letterCase", default=None
    )
    kerning: Optional[CheckoutBrandingTypographyKerning] = None


class CheckoutBrandingTypographyStyleInput(BaseModel):
    font: Optional[CheckoutBrandingTypographyFont] = None
    size: Optional[CheckoutBrandingTypographySize] = None
    weight: Optional[CheckoutBrandingTypographyWeight] = None
    letter_case: Optional[CheckoutBrandingTypographyLetterCase] = Field(
        alias="letterCase", default=None
    )
    kerning: Optional[CheckoutBrandingTypographyKerning] = None


class ChildProductRelationInput(BaseModel):
    child_product_id: str = Field(alias="childProductId")
    selected_parent_option_values: List["SelectedVariantOptionInput"] = Field(
        alias="selectedParentOptionValues"
    )


class CollectionDeleteInput(BaseModel):
    id: str


class CollectionInput(BaseModel):
    description_html: Optional[str] = Field(alias="descriptionHtml", default=None)
    handle: Optional[str] = None
    id: Optional[str] = None
    image: Optional["ImageInput"] = None
    products: Optional[List[str]] = None
    rule_set: Optional["CollectionRuleSetInput"] = Field(alias="ruleSet", default=None)
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)
    sort_order: Optional[CollectionSortOrder] = Field(alias="sortOrder", default=None)
    title: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None
    seo: Optional["SEOInput"] = None
    redirect_new_handle: Optional[bool] = Field(alias="redirectNewHandle", default=None)


class CollectionPublicationInput(BaseModel):
    publication_id: Optional[str] = Field(alias="publicationId", default=None)


class CollectionPublishInput(BaseModel):
    id: str
    collection_publications: List["CollectionPublicationInput"] = Field(
        alias="collectionPublications"
    )


class CollectionRuleInput(BaseModel):
    column: CollectionRuleColumn
    relation: CollectionRuleRelation
    condition: str
    condition_object_id: Optional[str] = Field(alias="conditionObjectId", default=None)


class CollectionRuleSetInput(BaseModel):
    applied_disjunctively: bool = Field(alias="appliedDisjunctively")
    rules: Optional[List["CollectionRuleInput"]] = None


class CollectionUnpublishInput(BaseModel):
    id: str
    collection_publications: List["CollectionPublicationInput"] = Field(
        alias="collectionPublications"
    )


class CompanyAddressInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    address_2: Optional[str] = Field(alias="address2", default=None)
    city: Optional[str] = None
    zip: Optional[str] = None
    recipient: Optional[str] = None
    first_name: Optional[str] = Field(alias="firstName", default=None)
    last_name: Optional[str] = Field(alias="lastName", default=None)
    phone: Optional[str] = None
    zone_code: Optional[str] = Field(alias="zoneCode", default=None)
    country_code: Optional[CountryCode] = Field(alias="countryCode", default=None)


class CompanyContactInput(BaseModel):
    first_name: Optional[str] = Field(alias="firstName", default=None)
    last_name: Optional[str] = Field(alias="lastName", default=None)
    email: Optional[str] = None
    title: Optional[str] = None
    locale: Optional[str] = None
    phone: Optional[str] = None


class CompanyContactRoleAssign(BaseModel):
    company_contact_role_id: str = Field(alias="companyContactRoleId")
    company_location_id: str = Field(alias="companyLocationId")


class CompanyCreateInput(BaseModel):
    company: "CompanyInput"
    company_contact: Optional["CompanyContactInput"] = Field(
        alias="companyContact", default=None
    )
    company_location: Optional["CompanyLocationInput"] = Field(
        alias="companyLocation", default=None
    )


class CompanyInput(BaseModel):
    name: Optional[str] = None
    note: Optional[str] = None
    external_id: Optional[str] = Field(alias="externalId", default=None)
    customer_since: Optional[Any] = Field(alias="customerSince", default=None)


class CompanyLocationInput(BaseModel):
    name: Optional[str] = None
    phone: Optional[str] = None
    locale: Optional[str] = None
    external_id: Optional[str] = Field(alias="externalId", default=None)
    note: Optional[str] = None
    buyer_experience_configuration: Optional[
        "BuyerExperienceConfigurationInput"
    ] = Field(alias="buyerExperienceConfiguration", default=None)
    billing_address: Optional["CompanyAddressInput"] = Field(
        alias="billingAddress", default=None
    )
    shipping_address: Optional["CompanyAddressInput"] = Field(
        alias="shippingAddress", default=None
    )
    billing_same_as_shipping: Optional[bool] = Field(
        alias="billingSameAsShipping", default=None
    )
    tax_registration_id: Optional[str] = Field(alias="taxRegistrationId", default=None)
    tax_exemptions: Optional[List[TaxExemption]] = Field(
        alias="taxExemptions", default=None
    )


class CompanyLocationRoleAssign(BaseModel):
    company_contact_role_id: str = Field(alias="companyContactRoleId")
    company_contact_id: str = Field(alias="companyContactId")


class CompanyLocationUpdateInput(BaseModel):
    name: Optional[str] = None
    phone: Optional[str] = None
    locale: Optional[str] = None
    external_id: Optional[str] = Field(alias="externalId", default=None)
    note: Optional[str] = None
    buyer_experience_configuration: Optional[
        "BuyerExperienceConfigurationInput"
    ] = Field(alias="buyerExperienceConfiguration", default=None)


class ConsentPolicyInput(BaseModel):
    country_code: Optional[PrivacyCountryCode] = Field(
        alias="countryCode", default=None
    )
    region_code: Optional[PrivacyRegionCode] = Field(alias="regionCode", default=None)
    consent_required: Optional[bool] = Field(alias="consentRequired", default=None)
    data_sale_opt_out_required: Optional[bool] = Field(
        alias="dataSaleOptOutRequired", default=None
    )


class ContextualPricingContext(BaseModel):
    country: Optional[CountryCode] = None
    company_location_id: Optional[str] = Field(alias="companyLocationId", default=None)


class ContextualPublicationContext(BaseModel):
    country: Optional[CountryCode] = None
    company_location_id: Optional[str] = Field(alias="companyLocationId", default=None)


class CountryHarmonizedSystemCodeInput(BaseModel):
    harmonized_system_code: str = Field(alias="harmonizedSystemCode")
    country_code: CountryCode = Field(alias="countryCode")


class CreateMediaInput(BaseModel):
    original_source: Optional[str] = Field(alias="originalSource", default=None)
    alt: Optional[str] = None
    media_content_type: Optional[MediaContentType] = Field(
        alias="mediaContentType", default=None
    )


class CropRegionInput(BaseModel):
    left: int
    top: int
    width: int
    height: int


class CustomShippingPackageInput(BaseModel):
    weight: Optional["WeightInput"] = None
    dimensions: Optional["ObjectDimensionsInput"] = None
    default: Optional[bool] = None
    name: Optional[str] = None
    type: Optional[ShippingPackageType] = None


class CustomerDeleteInput(BaseModel):
    id: str


class CustomerEmailMarketingConsentInput(BaseModel):
    marketing_opt_in_level: Optional[CustomerMarketingOptInLevel] = Field(
        alias="marketingOptInLevel", default=None
    )
    marketing_state: CustomerEmailMarketingState = Field(alias="marketingState")
    consent_updated_at: Optional[Any] = Field(alias="consentUpdatedAt", default=None)


class CustomerEmailMarketingConsentUpdateInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    email_marketing_consent: "CustomerEmailMarketingConsentInput" = Field(
        alias="emailMarketingConsent"
    )


class CustomerInput(BaseModel):
    addresses: Optional[List["MailingAddressInput"]] = None
    email: Optional[str] = None
    first_name: Optional[str] = Field(alias="firstName", default=None)
    id: Optional[str] = None
    last_name: Optional[str] = Field(alias="lastName", default=None)
    locale: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None
    note: Optional[str] = None
    phone: Optional[str] = None
    tags: Optional[List[str]] = None
    email_marketing_consent: Optional["CustomerEmailMarketingConsentInput"] = Field(
        alias="emailMarketingConsent", default=None
    )
    sms_marketing_consent: Optional["CustomerSmsMarketingConsentInput"] = Field(
        alias="smsMarketingConsent", default=None
    )
    tax_exempt: Optional[bool] = Field(alias="taxExempt", default=None)
    tax_exemptions: Optional[List[TaxExemption]] = Field(
        alias="taxExemptions", default=None
    )


class CustomerMergeOverrideFields(BaseModel):
    customer_id_of_first_name_to_keep: Optional[str] = Field(
        alias="customerIdOfFirstNameToKeep", default=None
    )
    customer_id_of_last_name_to_keep: Optional[str] = Field(
        alias="customerIdOfLastNameToKeep", default=None
    )
    customer_id_of_email_to_keep: Optional[str] = Field(
        alias="customerIdOfEmailToKeep", default=None
    )
    customer_id_of_phone_number_to_keep: Optional[str] = Field(
        alias="customerIdOfPhoneNumberToKeep", default=None
    )
    customer_id_of_default_address_to_keep: Optional[str] = Field(
        alias="customerIdOfDefaultAddressToKeep", default=None
    )
    note: Optional[str] = None
    tags: Optional[List[str]] = None


class CustomerPaymentMethodRemoteInput(BaseModel):
    stripe_payment_method: Optional["RemoteStripePaymentMethodInput"] = Field(
        alias="stripePaymentMethod", default=None
    )
    authorize_net_customer_payment_profile: Optional[
        "RemoteAuthorizeNetCustomerPaymentProfileInput"
    ] = Field(alias="authorizeNetCustomerPaymentProfile", default=None)
    braintree_payment_method: Optional["RemoteBraintreePaymentMethodInput"] = Field(
        alias="braintreePaymentMethod", default=None
    )
    paypal_payment_method: Optional["RemotePaypalPaymentMethodInput"] = Field(
        alias="paypalPaymentMethod", default=None
    )


class CustomerSegmentMembersQueryInput(BaseModel):
    segment_id: Optional[str] = Field(alias="segmentId", default=None)
    query: Optional[str] = None
    reverse: Optional[bool] = None
    sort_key: Optional[str] = Field(alias="sortKey", default=None)


class CustomerSmsMarketingConsentInput(BaseModel):
    marketing_opt_in_level: Optional[CustomerMarketingOptInLevel] = Field(
        alias="marketingOptInLevel", default=None
    )
    marketing_state: CustomerSmsMarketingState = Field(alias="marketingState")
    consent_updated_at: Optional[Any] = Field(alias="consentUpdatedAt", default=None)


class CustomerSmsMarketingConsentUpdateInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    sms_marketing_consent: "CustomerSmsMarketingConsentInput" = Field(
        alias="smsMarketingConsent"
    )


class DelegateAccessTokenInput(BaseModel):
    delegate_access_scope: List[str] = Field(alias="delegateAccessScope")
    expires_in: Optional[int] = Field(alias="expiresIn", default=None)


class DeliveryCarrierServiceCreateInput(BaseModel):
    name: str
    callback_url: Any = Field(alias="callbackUrl")
    supports_service_discovery: bool = Field(alias="supportsServiceDiscovery")
    active: bool


class DeliveryCarrierServiceUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    callback_url: Optional[Any] = Field(alias="callbackUrl", default=None)
    supports_service_discovery: Optional[bool] = Field(
        alias="supportsServiceDiscovery", default=None
    )
    active: Optional[bool] = None


class DeliveryCountryInput(BaseModel):
    code: Optional[CountryCode] = None
    rest_of_world: Optional[bool] = Field(alias="restOfWorld", default=None)
    provinces: Optional[List["DeliveryProvinceInput"]] = None
    include_all_provinces: Optional[bool] = Field(
        alias="includeAllProvinces", default=None
    )


class DeliveryCustomizationInput(BaseModel):
    function_id: Optional[str] = Field(alias="functionId", default=None)
    title: Optional[str] = None
    enabled: Optional[bool] = None
    metafields: Optional[List["MetafieldInput"]] = None


class DeliveryLocationGroupZoneInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    countries: Optional[List["DeliveryCountryInput"]] = None
    method_definitions_to_create: Optional[
        List["DeliveryMethodDefinitionInput"]
    ] = Field(alias="methodDefinitionsToCreate", default=None)
    method_definitions_to_update: Optional[
        List["DeliveryMethodDefinitionInput"]
    ] = Field(alias="methodDefinitionsToUpdate", default=None)


class DeliveryLocationLocalPickupEnableInput(BaseModel):
    location_id: str = Field(alias="locationId")
    pickup_time: DeliveryLocalPickupTime = Field(alias="pickupTime")
    instructions: Optional[str] = None


class DeliveryMethodDefinitionInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    active: Optional[bool] = None
    rate_definition: Optional["DeliveryRateDefinitionInput"] = Field(
        alias="rateDefinition", default=None
    )
    participant: Optional["DeliveryParticipantInput"] = None
    weight_conditions_to_create: Optional[List["DeliveryWeightConditionInput"]] = Field(
        alias="weightConditionsToCreate", default=None
    )
    price_conditions_to_create: Optional[List["DeliveryPriceConditionInput"]] = Field(
        alias="priceConditionsToCreate", default=None
    )
    conditions_to_update: Optional[List["DeliveryUpdateConditionInput"]] = Field(
        alias="conditionsToUpdate", default=None
    )


class DeliveryParticipantInput(BaseModel):
    id: Optional[str] = None
    carrier_service_id: Optional[str] = Field(alias="carrierServiceId", default=None)
    fixed_fee: Optional["MoneyInput"] = Field(alias="fixedFee", default=None)
    percentage_of_rate_fee: Optional[float] = Field(
        alias="percentageOfRateFee", default=None
    )
    participant_services: Optional[List["DeliveryParticipantServiceInput"]] = Field(
        alias="participantServices", default=None
    )
    adapt_to_new_services: Optional[bool] = Field(
        alias="adaptToNewServices", default=None
    )


class DeliveryParticipantServiceInput(BaseModel):
    name: str
    active: bool


class DeliveryPriceConditionInput(BaseModel):
    criteria: Optional["MoneyInput"] = None
    operator: Optional[DeliveryConditionOperator] = None


class DeliveryProfileInput(BaseModel):
    name: Optional[str] = None
    profile_location_groups: Optional[
        List["DeliveryProfileLocationGroupInput"]
    ] = Field(alias="profileLocationGroups", default=None)
    location_groups_to_create: Optional[
        List["DeliveryProfileLocationGroupInput"]
    ] = Field(alias="locationGroupsToCreate", default=None)
    location_groups_to_update: Optional[
        List["DeliveryProfileLocationGroupInput"]
    ] = Field(alias="locationGroupsToUpdate", default=None)
    location_groups_to_delete: Optional[List[str]] = Field(
        alias="locationGroupsToDelete", default=None
    )
    variants_to_associate: Optional[List[str]] = Field(
        alias="variantsToAssociate", default=None
    )
    variants_to_dissociate: Optional[List[str]] = Field(
        alias="variantsToDissociate", default=None
    )
    zones_to_delete: Optional[List[str]] = Field(alias="zonesToDelete", default=None)
    method_definitions_to_delete: Optional[List[str]] = Field(
        alias="methodDefinitionsToDelete", default=None
    )
    conditions_to_delete: Optional[List[str]] = Field(
        alias="conditionsToDelete", default=None
    )
    selling_plan_groups_to_associate: Optional[List[str]] = Field(
        alias="sellingPlanGroupsToAssociate", default=None
    )
    selling_plan_groups_to_dissociate: Optional[List[str]] = Field(
        alias="sellingPlanGroupsToDissociate", default=None
    )


class DeliveryProfileLocationGroupInput(BaseModel):
    id: Optional[str] = None
    locations: Optional[List[str]] = None
    locations_to_add: Optional[List[str]] = Field(alias="locationsToAdd", default=None)
    locations_to_remove: Optional[List[str]] = Field(
        alias="locationsToRemove", default=None
    )
    zones_to_create: Optional[List["DeliveryLocationGroupZoneInput"]] = Field(
        alias="zonesToCreate", default=None
    )
    zones_to_update: Optional[List["DeliveryLocationGroupZoneInput"]] = Field(
        alias="zonesToUpdate", default=None
    )


class DeliveryProvinceInput(BaseModel):
    code: str


class DeliveryRateDefinitionInput(BaseModel):
    id: Optional[str] = None
    price: "MoneyInput"


class DeliverySettingInput(BaseModel):
    legacy_mode_profiles: Optional[bool] = Field(
        alias="legacyModeProfiles", default=None
    )


class DeliveryUpdateConditionInput(BaseModel):
    id: str
    criteria: Optional[float] = None
    criteria_unit: Optional[str] = Field(alias="criteriaUnit", default=None)
    field: Optional[DeliveryConditionField] = None
    operator: Optional[DeliveryConditionOperator] = None


class DeliveryWeightConditionInput(BaseModel):
    criteria: Optional["WeightInput"] = None
    operator: Optional[DeliveryConditionOperator] = None


class DiscountAmountInput(BaseModel):
    amount: Optional[Any] = None
    applies_on_each_item: Optional[bool] = Field(
        alias="appliesOnEachItem", default=None
    )


class DiscountAutomaticAppInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    function_id: Optional[str] = Field(alias="functionId", default=None)
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    metafields: Optional[List["MetafieldInput"]] = None


class DiscountAutomaticBasicInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    minimum_requirement: Optional["DiscountMinimumRequirementInput"] = Field(
        alias="minimumRequirement", default=None
    )
    customer_gets: Optional["DiscountCustomerGetsInput"] = Field(
        alias="customerGets", default=None
    )
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )


class DiscountAutomaticBxgyInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    title: Optional[str] = None
    uses_per_order_limit: Optional[Any] = Field(alias="usesPerOrderLimit", default=None)
    customer_buys: Optional["DiscountCustomerBuysInput"] = Field(
        alias="customerBuys", default=None
    )
    customer_gets: Optional["DiscountCustomerGetsInput"] = Field(
        alias="customerGets", default=None
    )


class DiscountAutomaticFreeShippingInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    minimum_requirement: Optional["DiscountMinimumRequirementInput"] = Field(
        alias="minimumRequirement", default=None
    )
    destination: Optional["DiscountShippingDestinationSelectionInput"] = None
    maximum_shipping_price: Optional[Any] = Field(
        alias="maximumShippingPrice", default=None
    )
    applies_on_one_time_purchase: Optional[bool] = Field(
        alias="appliesOnOneTimePurchase", default=None
    )
    applies_on_subscription: Optional[bool] = Field(
        alias="appliesOnSubscription", default=None
    )
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )


class DiscountCodeAppInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    function_id: Optional[str] = Field(alias="functionId", default=None)
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    usage_limit: Optional[int] = Field(alias="usageLimit", default=None)
    applies_once_per_customer: Optional[bool] = Field(
        alias="appliesOncePerCustomer", default=None
    )
    customer_selection: Optional["DiscountCustomerSelectionInput"] = Field(
        alias="customerSelection", default=None
    )
    code: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None


class DiscountCodeBasicInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    usage_limit: Optional[int] = Field(alias="usageLimit", default=None)
    applies_once_per_customer: Optional[bool] = Field(
        alias="appliesOncePerCustomer", default=None
    )
    minimum_requirement: Optional["DiscountMinimumRequirementInput"] = Field(
        alias="minimumRequirement", default=None
    )
    customer_gets: Optional["DiscountCustomerGetsInput"] = Field(
        alias="customerGets", default=None
    )
    customer_selection: Optional["DiscountCustomerSelectionInput"] = Field(
        alias="customerSelection", default=None
    )
    code: Optional[str] = None
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )


class DiscountCodeBxgyInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    customer_buys: Optional["DiscountCustomerBuysInput"] = Field(
        alias="customerBuys", default=None
    )
    customer_gets: Optional["DiscountCustomerGetsInput"] = Field(
        alias="customerGets", default=None
    )
    customer_selection: Optional["DiscountCustomerSelectionInput"] = Field(
        alias="customerSelection", default=None
    )
    code: Optional[str] = None
    usage_limit: Optional[int] = Field(alias="usageLimit", default=None)
    uses_per_order_limit: Optional[int] = Field(alias="usesPerOrderLimit", default=None)
    applies_once_per_customer: Optional[bool] = Field(
        alias="appliesOncePerCustomer", default=None
    )


class DiscountCodeFreeShippingInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    title: Optional[str] = None
    starts_at: Optional[Any] = Field(alias="startsAt", default=None)
    ends_at: Optional[Any] = Field(alias="endsAt", default=None)
    code: Optional[str] = None
    usage_limit: Optional[int] = Field(alias="usageLimit", default=None)
    applies_once_per_customer: Optional[bool] = Field(
        alias="appliesOncePerCustomer", default=None
    )
    minimum_requirement: Optional["DiscountMinimumRequirementInput"] = Field(
        alias="minimumRequirement", default=None
    )
    customer_selection: Optional["DiscountCustomerSelectionInput"] = Field(
        alias="customerSelection", default=None
    )
    destination: Optional["DiscountShippingDestinationSelectionInput"] = None
    maximum_shipping_price: Optional[Any] = Field(
        alias="maximumShippingPrice", default=None
    )
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )
    applies_on_one_time_purchase: Optional[bool] = Field(
        alias="appliesOnOneTimePurchase", default=None
    )
    applies_on_subscription: Optional[bool] = Field(
        alias="appliesOnSubscription", default=None
    )


class DiscountCollectionsInput(BaseModel):
    add: Optional[List[str]] = None
    remove: Optional[List[str]] = None


class DiscountCombinesWithInput(BaseModel):
    product_discounts: Optional[bool] = Field(alias="productDiscounts", default=None)
    order_discounts: Optional[bool] = Field(alias="orderDiscounts", default=None)
    shipping_discounts: Optional[bool] = Field(alias="shippingDiscounts", default=None)


class DiscountCountriesInput(BaseModel):
    add: Optional[List[CountryCode]] = None
    remove: Optional[List[CountryCode]] = None
    include_rest_of_world: Optional[bool] = Field(
        alias="includeRestOfWorld", default=None
    )


class DiscountCustomerBuysInput(BaseModel):
    value: Optional["DiscountCustomerBuysValueInput"] = None
    items: Optional["DiscountItemsInput"] = None


class DiscountCustomerBuysValueInput(BaseModel):
    quantity: Optional[Any] = None
    amount: Optional[Any] = None


class DiscountCustomerGetsInput(BaseModel):
    value: Optional["DiscountCustomerGetsValueInput"] = None
    items: Optional["DiscountItemsInput"] = None
    applies_on_one_time_purchase: Optional[bool] = Field(
        alias="appliesOnOneTimePurchase", default=None
    )
    applies_on_subscription: Optional[bool] = Field(
        alias="appliesOnSubscription", default=None
    )


class DiscountCustomerGetsValueInput(BaseModel):
    discount_on_quantity: Optional["DiscountOnQuantityInput"] = Field(
        alias="discountOnQuantity", default=None
    )
    percentage: Optional[float] = None
    discount_amount: Optional["DiscountAmountInput"] = Field(
        alias="discountAmount", default=None
    )


class DiscountCustomerSegmentsInput(BaseModel):
    add: Optional[List[str]] = None
    remove: Optional[List[str]] = None


class DiscountCustomerSelectionInput(BaseModel):
    all: Optional[bool] = None
    customers: Optional["DiscountCustomersInput"] = None
    customer_segments: Optional["DiscountCustomerSegmentsInput"] = Field(
        alias="customerSegments", default=None
    )


class DiscountCustomersInput(BaseModel):
    add: Optional[List[str]] = None
    remove: Optional[List[str]] = None


class DiscountEffectInput(BaseModel):
    percentage: Optional[float] = None
    amount: Optional[Any] = None


class DiscountItemsInput(BaseModel):
    products: Optional["DiscountProductsInput"] = None
    collections: Optional["DiscountCollectionsInput"] = None
    all: Optional[bool] = None


class DiscountMinimumQuantityInput(BaseModel):
    greater_than_or_equal_to_quantity: Optional[Any] = Field(
        alias="greaterThanOrEqualToQuantity", default=None
    )


class DiscountMinimumRequirementInput(BaseModel):
    quantity: Optional["DiscountMinimumQuantityInput"] = None
    subtotal: Optional["DiscountMinimumSubtotalInput"] = None


class DiscountMinimumSubtotalInput(BaseModel):
    greater_than_or_equal_to_subtotal: Optional[Any] = Field(
        alias="greaterThanOrEqualToSubtotal", default=None
    )


class DiscountOnQuantityInput(BaseModel):
    quantity: Optional[Any] = None
    effect: Optional["DiscountEffectInput"] = None


class DiscountProductsInput(BaseModel):
    products_to_add: Optional[List[str]] = Field(alias="productsToAdd", default=None)
    products_to_remove: Optional[List[str]] = Field(
        alias="productsToRemove", default=None
    )
    product_variants_to_add: Optional[List[str]] = Field(
        alias="productVariantsToAdd", default=None
    )
    product_variants_to_remove: Optional[List[str]] = Field(
        alias="productVariantsToRemove", default=None
    )


class DiscountRedeemCodeInput(BaseModel):
    code: str


class DiscountResourceFeedbackInput(BaseModel):
    discount_id: str = Field(alias="discountId")
    state: ResourceFeedbackState
    feedback_generated_at: Any = Field(alias="feedbackGeneratedAt")
    discount_updated_at: Any = Field(alias="discountUpdatedAt")
    messages: Optional[List[str]] = None


class DiscountShippingDestinationSelectionInput(BaseModel):
    all: Optional[bool] = None
    countries: Optional["DiscountCountriesInput"] = None


class DraftOrderAppliedDiscountInput(BaseModel):
    amount: Optional[Any] = None
    description: Optional[str] = None
    title: Optional[str] = None
    value: float
    value_type: DraftOrderAppliedDiscountType = Field(alias="valueType")


class DraftOrderDeleteInput(BaseModel):
    id: str


class DraftOrderInput(BaseModel):
    applied_discount: Optional["DraftOrderAppliedDiscountInput"] = Field(
        alias="appliedDiscount", default=None
    )
    discount_codes: Optional[List[str]] = Field(alias="discountCodes", default=None)
    accept_automatic_discounts: Optional[bool] = Field(
        alias="acceptAutomaticDiscounts", default=None
    )
    billing_address: Optional["MailingAddressInput"] = Field(
        alias="billingAddress", default=None
    )
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )
    email: Optional[str] = None
    line_items: Optional[List["DraftOrderLineItemInput"]] = Field(
        alias="lineItems", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None
    localization_extensions: Optional[List["LocalizationExtensionInput"]] = Field(
        alias="localizationExtensions", default=None
    )
    note: Optional[str] = None
    shipping_address: Optional["MailingAddressInput"] = Field(
        alias="shippingAddress", default=None
    )
    shipping_line: Optional["ShippingLineInput"] = Field(
        alias="shippingLine", default=None
    )
    tags: Optional[List[str]] = None
    tax_exempt: Optional[bool] = Field(alias="taxExempt", default=None)
    use_customer_default_address: Optional[bool] = Field(
        alias="useCustomerDefaultAddress", default=None
    )
    visible_to_customer: Optional[bool] = Field(alias="visibleToCustomer", default=None)
    reserve_inventory_until: Optional[Any] = Field(
        alias="reserveInventoryUntil", default=None
    )
    presentment_currency_code: Optional[CurrencyCode] = Field(
        alias="presentmentCurrencyCode", default=None
    )
    market_region_country_code: Optional[CountryCode] = Field(
        alias="marketRegionCountryCode", default=None
    )
    phone: Optional[str] = None
    payment_terms: Optional["PaymentTermsInput"] = Field(
        alias="paymentTerms", default=None
    )
    purchasing_entity: Optional["PurchasingEntityInput"] = Field(
        alias="purchasingEntity", default=None
    )
    source_name: Optional[str] = Field(alias="sourceName", default=None)
    allow_discount_codes_in_checkout: Optional[bool] = Field(
        alias="allowDiscountCodesInCheckout", default=None
    )
    po_number: Optional[str] = Field(alias="poNumber", default=None)


class DraftOrderLineItemInput(BaseModel):
    applied_discount: Optional["DraftOrderAppliedDiscountInput"] = Field(
        alias="appliedDiscount", default=None
    )
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )
    original_unit_price: Optional[Any] = Field(alias="originalUnitPrice", default=None)
    quantity: int
    requires_shipping: Optional[bool] = Field(alias="requiresShipping", default=None)
    sku: Optional[str] = None
    taxable: Optional[bool] = None
    title: Optional[str] = None
    variant_id: Optional[str] = Field(alias="variantId", default=None)
    weight: Optional["WeightInput"] = None
    uuid: Optional[str] = None


class EmailInput(BaseModel):
    subject: Optional[str] = None
    to: Optional[str] = None
    from_: Optional[str] = Field(alias="from", default=None)
    body: Optional[str] = None
    bcc: Optional[List[str]] = None
    custom_message: Optional[str] = Field(alias="customMessage", default=None)


class EventBridgeWebhookSubscriptionInput(BaseModel):
    arn: Optional[Any] = None
    format: Optional[WebhookSubscriptionFormat] = None
    include_fields: Optional[List[str]] = Field(alias="includeFields", default=None)
    metafield_namespaces: Optional[List[str]] = Field(
        alias="metafieldNamespaces", default=None
    )


class ExchangeLineItemAppliedDiscountInput(BaseModel):
    description: Optional[str] = None
    value: "ExchangeLineItemAppliedDiscountValueInput"


class ExchangeLineItemAppliedDiscountValueInput(BaseModel):
    amount: Optional["MoneyInput"] = None
    percentage: Optional[float] = None


class ExchangeLineItemInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    quantity: int
    applied_discount: Optional["ExchangeLineItemAppliedDiscountInput"] = Field(
        alias="appliedDiscount", default=None
    )


class FileCreateInput(BaseModel):
    filename: Optional[str] = None
    original_source: str = Field(alias="originalSource")
    content_type: Optional[FileContentType] = Field(alias="contentType", default=None)
    alt: Optional[str] = None
    duplicate_resolution_mode: Optional[FileCreateInputDuplicateResolutionMode] = Field(
        alias="duplicateResolutionMode", default=None
    )


class FileUpdateInput(BaseModel):
    id: str
    alt: Optional[str] = None
    original_source: Optional[str] = Field(alias="originalSource", default=None)
    preview_image_source: Optional[str] = Field(
        alias="previewImageSource", default=None
    )
    filename: Optional[str] = None
    references_to_add: Optional[List[str]] = Field(
        alias="referencesToAdd", default=None
    )
    references_to_remove: Optional[List[str]] = Field(
        alias="referencesToRemove", default=None
    )


class FulfillmentEventInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    city: Optional[str] = None
    country: Optional[str] = None
    estimated_delivery_at: Optional[Any] = Field(
        alias="estimatedDeliveryAt", default=None
    )
    happened_at: Optional[Any] = Field(alias="happenedAt", default=None)
    fulfillment_id: str = Field(alias="fulfillmentId")
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    message: Optional[str] = None
    province: Optional[str] = None
    status: FulfillmentEventStatus
    zip: Optional[str] = None


class FulfillmentOrderHoldInput(BaseModel):
    reason: FulfillmentHoldReason
    reason_notes: Optional[str] = Field(alias="reasonNotes", default=None)
    notify_merchant: Optional[bool] = Field(alias="notifyMerchant", default=None)
    external_id: Optional[str] = Field(alias="externalId", default=None)
    fulfillment_order_line_items: Optional[
        List["FulfillmentOrderLineItemInput"]
    ] = Field(alias="fulfillmentOrderLineItems", default=None)


class FulfillmentOrderLineItemInput(BaseModel):
    id: str
    quantity: int


class FulfillmentOrderLineItemsInput(BaseModel):
    fulfillment_order_id: str = Field(alias="fulfillmentOrderId")
    fulfillment_order_line_items: Optional[
        List["FulfillmentOrderLineItemInput"]
    ] = Field(alias="fulfillmentOrderLineItems", default=None)


class FulfillmentOrderLineItemsPreparedForPickupInput(BaseModel):
    line_items_by_fulfillment_order: List[
        "PreparedFulfillmentOrderLineItemsInput"
    ] = Field(alias="lineItemsByFulfillmentOrder")


class FulfillmentOrderMergeInput(BaseModel):
    merge_intents: List["FulfillmentOrderMergeInputMergeIntent"] = Field(
        alias="mergeIntents"
    )


class FulfillmentOrderMergeInputMergeIntent(BaseModel):
    fulfillment_order_line_items: Optional[
        List["FulfillmentOrderLineItemInput"]
    ] = Field(alias="fulfillmentOrderLineItems", default=None)
    fulfillment_order_id: str = Field(alias="fulfillmentOrderId")


class FulfillmentOrderSplitInput(BaseModel):
    fulfillment_order_line_items: List["FulfillmentOrderLineItemInput"] = Field(
        alias="fulfillmentOrderLineItems"
    )
    fulfillment_order_id: str = Field(alias="fulfillmentOrderId")


class FulfillmentOriginAddressInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    address_2: Optional[str] = Field(alias="address2", default=None)
    city: Optional[str] = None
    zip: Optional[str] = None
    province_code: Optional[str] = Field(alias="provinceCode", default=None)
    country_code: str = Field(alias="countryCode")


class FulfillmentTrackingInput(BaseModel):
    number: Optional[str] = None
    url: Optional[Any] = None
    company: Optional[str] = None
    numbers: Optional[List[str]] = None
    urls: Optional[List[Any]] = None


class FulfillmentV2Input(BaseModel):
    tracking_info: Optional["FulfillmentTrackingInput"] = Field(
        alias="trackingInfo", default=None
    )
    notify_customer: Optional[bool] = Field(alias="notifyCustomer", default=None)
    line_items_by_fulfillment_order: List["FulfillmentOrderLineItemsInput"] = Field(
        alias="lineItemsByFulfillmentOrder"
    )
    origin_address: Optional["FulfillmentOriginAddressInput"] = Field(
        alias="originAddress", default=None
    )


class GateConfigurationCreateInput(BaseModel):
    name: Optional[str] = None
    handle: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None


class GateConfigurationDeleteInput(BaseModel):
    id: str


class GateConfigurationUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    handle: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None


class GateSubjectCreateInput(BaseModel):
    gate_configuration_id: str = Field(alias="gateConfigurationId")
    subject: str
    active: Optional[bool] = None


class GateSubjectDeleteInput(BaseModel):
    id: str


class GateSubjectUpdateInput(BaseModel):
    id: str
    gate_configuration_id: str = Field(alias="gateConfigurationId")
    active: Optional[bool] = None


class GiftCardCreateInput(BaseModel):
    initial_value: Any = Field(alias="initialValue")
    code: Optional[str] = None
    customer_id: Optional[str] = Field(alias="customerId", default=None)
    expires_on: Optional[Any] = Field(alias="expiresOn", default=None)
    note: Optional[str] = None
    notify: Optional[bool] = None
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)


class GiftCardUpdateInput(BaseModel):
    note: Optional[str] = None
    expires_on: Optional[Any] = Field(alias="expiresOn", default=None)
    customer_id: Optional[str] = Field(alias="customerId", default=None)
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)


class HasMetafieldsIdentifier(BaseModel):
    namespace: Optional[str] = None
    key: str


class HydrogenStorefrontCustomerApplicationUrlsReplaceInput(BaseModel):
    redirect_uri: Optional[
        "HydrogenStorefrontCustomerApplicationUrlsReplaceUriInput"
    ] = Field(alias="redirectUri", default=None)
    javascript_origin: Optional[
        "HydrogenStorefrontCustomerApplicationUrlsReplaceUriInput"
    ] = Field(alias="javascriptOrigin", default=None)
    logout_uris: Optional[
        "HydrogenStorefrontCustomerApplicationUrlsReplaceUriInput"
    ] = Field(alias="logoutUris", default=None)


class HydrogenStorefrontCustomerApplicationUrlsReplaceUriInput(BaseModel):
    add: Optional[List[str]] = None
    remove_regex: Optional[str] = Field(alias="removeRegex", default=None)


class HydrogenStorefrontEnvironmentVariableInput(BaseModel):
    is_secret: Optional[bool] = Field(alias="isSecret", default=None)
    key: str
    value: str


class ImageInput(BaseModel):
    id: Optional[str] = None
    alt_text: Optional[str] = Field(alias="altText", default=None)
    src: Optional[str] = None


class ImageTransformInput(BaseModel):
    crop: Optional[CropRegion] = None
    max_width: Optional[int] = Field(alias="maxWidth", default=None)
    max_height: Optional[int] = Field(alias="maxHeight", default=None)
    crop_region: Optional["CropRegionInput"] = Field(alias="cropRegion", default=None)
    scale: Optional[int] = None
    preferred_content_type: Optional[ImageContentType] = Field(
        alias="preferredContentType", default=None
    )


class IncomingRequestLineItemInput(BaseModel):
    fulfillment_order_line_item_id: str = Field(alias="fulfillmentOrderLineItemId")
    message: Optional[str] = None


class InventoryAdjustItemInput(BaseModel):
    inventory_item_id: str = Field(alias="inventoryItemId")
    available_delta: int = Field(alias="availableDelta")


class InventoryAdjustQuantitiesInput(BaseModel):
    reason: str
    name: str
    reference_document_uri: Optional[str] = Field(
        alias="referenceDocumentUri", default=None
    )
    changes: List["InventoryChangeInput"]


class InventoryAdjustQuantityInput(BaseModel):
    inventory_level_id: str = Field(alias="inventoryLevelId")
    available_delta: int = Field(alias="availableDelta")


class InventoryBulkToggleActivationInput(BaseModel):
    location_id: str = Field(alias="locationId")
    activate: bool


class InventoryChangeInput(BaseModel):
    delta: int
    inventory_item_id: str = Field(alias="inventoryItemId")
    location_id: str = Field(alias="locationId")
    ledger_document_uri: Optional[str] = Field(alias="ledgerDocumentUri", default=None)


class InventoryItemInput(BaseModel):
    sku: Optional[str] = None
    cost: Optional[Any] = None
    tracked: Optional[bool] = None
    country_code_of_origin: Optional[CountryCode] = Field(
        alias="countryCodeOfOrigin", default=None
    )
    harmonized_system_code: Optional[str] = Field(
        alias="harmonizedSystemCode", default=None
    )
    country_harmonized_system_codes: Optional[
        List["CountryHarmonizedSystemCodeInput"]
    ] = Field(alias="countryHarmonizedSystemCodes", default=None)
    province_code_of_origin: Optional[str] = Field(
        alias="provinceCodeOfOrigin", default=None
    )
    measurement: Optional["InventoryItemMeasurementInput"] = None
    requires_shipping: Optional[bool] = Field(alias="requiresShipping", default=None)


class InventoryItemMeasurementInput(BaseModel):
    weight: Optional["WeightInput"] = None


class InventoryLevelInput(BaseModel):
    available_quantity: int = Field(alias="availableQuantity")
    location_id: str = Field(alias="locationId")


class InventoryMoveQuantitiesInput(BaseModel):
    reason: str
    reference_document_uri: str = Field(alias="referenceDocumentUri")
    changes: List["InventoryMoveQuantityChange"]


class InventoryMoveQuantityChange(BaseModel):
    inventory_item_id: str = Field(alias="inventoryItemId")
    quantity: int
    from_: "InventoryMoveQuantityTerminalInput" = Field(alias="from")
    to: "InventoryMoveQuantityTerminalInput"


class InventoryMoveQuantityTerminalInput(BaseModel):
    location_id: str = Field(alias="locationId")
    name: str
    ledger_document_uri: Optional[str] = Field(alias="ledgerDocumentUri", default=None)


class InventoryQuantityInput(BaseModel):
    inventory_item_id: str = Field(alias="inventoryItemId")
    location_id: str = Field(alias="locationId")
    quantity: int
    compare_quantity: Optional[int] = Field(alias="compareQuantity", default=None)


class InventoryScheduledChangeInput(BaseModel):
    expected_at: Any = Field(alias="expectedAt")
    from_name: str = Field(alias="fromName")
    to_name: str = Field(alias="toName")


class InventoryScheduledChangeItemInput(BaseModel):
    inventory_item_id: str = Field(alias="inventoryItemId")
    location_id: str = Field(alias="locationId")
    ledger_document_uri: Any = Field(alias="ledgerDocumentUri")
    scheduled_changes: List["InventoryScheduledChangeInput"] = Field(
        alias="scheduledChanges"
    )


class InventorySetOnHandQuantitiesInput(BaseModel):
    reason: str
    reference_document_uri: Optional[str] = Field(
        alias="referenceDocumentUri", default=None
    )
    set_quantities: List["InventorySetQuantityInput"] = Field(alias="setQuantities")


class InventorySetQuantitiesInput(BaseModel):
    reason: str
    name: str
    reference_document_uri: Optional[str] = Field(
        alias="referenceDocumentUri", default=None
    )
    quantities: List["InventoryQuantityInput"]
    ignore_compare_quantity: Optional[bool] = Field(
        alias="ignoreCompareQuantity", default=None
    )


class InventorySetQuantityInput(BaseModel):
    inventory_item_id: str = Field(alias="inventoryItemId")
    location_id: str = Field(alias="locationId")
    quantity: int


class InventorySetScheduledChangesInput(BaseModel):
    reason: str
    items: List["InventoryScheduledChangeItemInput"]
    reference_document_uri: Any = Field(alias="referenceDocumentUri")


class LinkedMetafieldCreateInput(BaseModel):
    namespace: str
    key: str
    values: Optional[List[str]] = None


class LinkedMetafieldUpdateInput(BaseModel):
    namespace: str
    key: str


class LocalizationExtensionInput(BaseModel):
    key: LocalizationExtensionKey
    value: str


class LocationAddAddressInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    address_2: Optional[str] = Field(alias="address2", default=None)
    city: Optional[str] = None
    phone: Optional[str] = None
    zip: Optional[str] = None
    country_code: CountryCode = Field(alias="countryCode")
    province_code: Optional[str] = Field(alias="provinceCode", default=None)


class LocationAddInput(BaseModel):
    name: str
    address: "LocationAddAddressInput"
    fulfills_online_orders: Optional[bool] = Field(
        alias="fulfillsOnlineOrders", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None


class LocationEditAddressInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    address_2: Optional[str] = Field(alias="address2", default=None)
    city: Optional[str] = None
    phone: Optional[str] = None
    zip: Optional[str] = None
    country_code: Optional[CountryCode] = Field(alias="countryCode", default=None)
    province_code: Optional[str] = Field(alias="provinceCode", default=None)


class LocationEditInput(BaseModel):
    name: Optional[str] = None
    address: Optional["LocationEditAddressInput"] = None
    fulfills_online_orders: Optional[bool] = Field(
        alias="fulfillsOnlineOrders", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None


class MailingAddressInput(BaseModel):
    address_1: Optional[str] = Field(alias="address1", default=None)
    address_2: Optional[str] = Field(alias="address2", default=None)
    city: Optional[str] = None
    company: Optional[str] = None
    country_code: Optional[CountryCode] = Field(alias="countryCode", default=None)
    first_name: Optional[str] = Field(alias="firstName", default=None)
    last_name: Optional[str] = Field(alias="lastName", default=None)
    phone: Optional[str] = None
    province_code: Optional[str] = Field(alias="provinceCode", default=None)
    zip: Optional[str] = None


class MarketCreateInput(BaseModel):
    name: str
    handle: Optional[str] = None
    enabled: Optional[bool] = None


class MarketCurrencySettingsUpdateInput(BaseModel):
    base_currency: Optional[CurrencyCode] = Field(alias="baseCurrency", default=None)
    local_currencies: Optional[bool] = Field(alias="localCurrencies", default=None)


class MarketLocalizationRegisterInput(BaseModel):
    market_id: str = Field(alias="marketId")
    key: str
    value: str
    market_localizable_content_digest: str = Field(
        alias="marketLocalizableContentDigest"
    )


class MarketRegionCreateInput(BaseModel):
    country_code: CountryCode = Field(alias="countryCode")


class MarketUpdateInput(BaseModel):
    name: Optional[str] = None
    handle: Optional[str] = None
    enabled: Optional[bool] = None


class MarketWebPresenceCreateInput(BaseModel):
    domain_id: Optional[str] = Field(alias="domainId", default=None)
    default_locale: str = Field(alias="defaultLocale")
    alternate_locales: Optional[List[str]] = Field(
        alias="alternateLocales", default=None
    )
    subfolder_suffix: Optional[str] = Field(alias="subfolderSuffix", default=None)


class MarketWebPresenceUpdateInput(BaseModel):
    domain_id: Optional[str] = Field(alias="domainId", default=None)
    default_locale: Optional[str] = Field(alias="defaultLocale", default=None)
    alternate_locales: Optional[List[str]] = Field(
        alias="alternateLocales", default=None
    )
    subfolder_suffix: Optional[str] = Field(alias="subfolderSuffix", default=None)


class MarketingActivityBudgetInput(BaseModel):
    budget_type: Optional[MarketingBudgetBudgetType] = Field(
        alias="budgetType", default=None
    )
    total: Optional["MoneyInput"] = None


class MarketingActivityCreateExternalInput(BaseModel):
    title: str
    utm: Optional["UTMInput"] = None
    url_parameter_value: Optional[str] = Field(alias="urlParameterValue", default=None)
    budget: Optional["MarketingActivityBudgetInput"] = None
    ad_spend: Optional["MoneyInput"] = Field(alias="adSpend", default=None)
    remote_id: Optional[str] = Field(alias="remoteId", default=None)
    status: Optional[MarketingActivityExternalStatus] = None
    remote_url: Any = Field(alias="remoteUrl")
    remote_preview_image_url: Optional[Any] = Field(
        alias="remotePreviewImageUrl", default=None
    )
    tactic: MarketingTactic
    marketing_channel_type: MarketingChannel = Field(alias="marketingChannelType")
    referring_domain: Optional[str] = Field(alias="referringDomain", default=None)
    channel_handle: Optional[str] = Field(alias="channelHandle", default=None)
    scheduled_start: Optional[Any] = Field(alias="scheduledStart", default=None)
    scheduled_end: Optional[Any] = Field(alias="scheduledEnd", default=None)
    start: Optional[Any] = None
    end: Optional[Any] = None
    parent_activity_id: Optional[str] = Field(alias="parentActivityId", default=None)
    parent_remote_id: Optional[str] = Field(alias="parentRemoteId", default=None)
    hierarchy_level: Optional[MarketingActivityHierarchyLevel] = Field(
        alias="hierarchyLevel", default=None
    )


class MarketingActivityCreateInput(BaseModel):
    marketing_activity_title: Optional[str] = Field(
        alias="marketingActivityTitle", default=None
    )
    form_data: Optional[str] = Field(alias="formData", default=None)
    marketing_activity_extension_id: str = Field(alias="marketingActivityExtensionId")
    context: Optional[str] = None
    utm: Optional["UTMInput"] = None
    status: MarketingActivityStatus
    budget: Optional["MarketingActivityBudgetInput"] = None


class MarketingActivityUpdateExternalInput(BaseModel):
    title: Optional[str] = None
    budget: Optional["MarketingActivityBudgetInput"] = None
    ad_spend: Optional["MoneyInput"] = Field(alias="adSpend", default=None)
    remote_url: Optional[Any] = Field(alias="remoteUrl", default=None)
    remote_preview_image_url: Optional[Any] = Field(
        alias="remotePreviewImageUrl", default=None
    )
    tactic: Optional[MarketingTactic] = None
    marketing_channel_type: Optional[MarketingChannel] = Field(
        alias="marketingChannelType", default=None
    )
    referring_domain: Optional[str] = Field(alias="referringDomain", default=None)
    scheduled_start: Optional[Any] = Field(alias="scheduledStart", default=None)
    scheduled_end: Optional[Any] = Field(alias="scheduledEnd", default=None)
    start: Optional[Any] = None
    end: Optional[Any] = None
    status: Optional[MarketingActivityExternalStatus] = None


class MarketingActivityUpdateInput(BaseModel):
    id: str
    marketing_recommendation_id: Optional[str] = Field(
        alias="marketingRecommendationId", default=None
    )
    title: Optional[str] = None
    event_context: Optional[str] = Field(alias="eventContext", default=None)
    use_external_editor: Optional[bool] = Field(alias="useExternalEditor", default=None)
    tracking_opens: Optional[bool] = Field(alias="trackingOpens", default=None)
    budget: Optional["MarketingActivityBudgetInput"] = None
    status: Optional[MarketingActivityStatus] = None
    target_status: Optional[MarketingActivityStatus] = Field(
        alias="targetStatus", default=None
    )
    scheduled_to_start_at: Optional[Any] = Field(
        alias="scheduledToStartAt", default=None
    )
    scheduled_to_end_at: Optional[Any] = Field(alias="scheduledToEndAt", default=None)
    form_data: Optional[str] = Field(alias="formData", default=None)
    utm: Optional["UTMInput"] = None
    marketed_resources: Optional[List[str]] = Field(
        alias="marketedResources", default=None
    )
    errors: Optional[Any] = None
    error_occurred_at: Optional[Any] = Field(alias="errorOccurredAt", default=None)


class MarketingActivityUpsertExternalInput(BaseModel):
    title: str
    utm: Optional["UTMInput"] = None
    budget: Optional["MarketingActivityBudgetInput"] = None
    ad_spend: Optional["MoneyInput"] = Field(alias="adSpend", default=None)
    remote_id: str = Field(alias="remoteId")
    status: MarketingActivityExternalStatus
    remote_url: Any = Field(alias="remoteUrl")
    remote_preview_image_url: Optional[Any] = Field(
        alias="remotePreviewImageUrl", default=None
    )
    tactic: MarketingTactic
    marketing_channel_type: MarketingChannel = Field(alias="marketingChannelType")
    referring_domain: Optional[str] = Field(alias="referringDomain", default=None)
    channel_handle: Optional[str] = Field(alias="channelHandle", default=None)
    scheduled_start: Optional[Any] = Field(alias="scheduledStart", default=None)
    scheduled_end: Optional[Any] = Field(alias="scheduledEnd", default=None)
    start: Optional[Any] = None
    end: Optional[Any] = None
    url_parameter_value: Optional[str] = Field(alias="urlParameterValue", default=None)
    parent_remote_id: Optional[str] = Field(alias="parentRemoteId", default=None)
    hierarchy_level: Optional[MarketingActivityHierarchyLevel] = Field(
        alias="hierarchyLevel", default=None
    )


class MarketingEngagementInput(BaseModel):
    occurred_on: Any = Field(alias="occurredOn")
    impressions_count: Optional[int] = Field(alias="impressionsCount", default=None)
    views_count: Optional[int] = Field(alias="viewsCount", default=None)
    clicks_count: Optional[int] = Field(alias="clicksCount", default=None)
    shares_count: Optional[int] = Field(alias="sharesCount", default=None)
    favorites_count: Optional[int] = Field(alias="favoritesCount", default=None)
    comments_count: Optional[int] = Field(alias="commentsCount", default=None)
    unsubscribes_count: Optional[int] = Field(alias="unsubscribesCount", default=None)
    complaints_count: Optional[int] = Field(alias="complaintsCount", default=None)
    fails_count: Optional[int] = Field(alias="failsCount", default=None)
    sends_count: Optional[int] = Field(alias="sendsCount", default=None)
    unique_views_count: Optional[int] = Field(alias="uniqueViewsCount", default=None)
    unique_clicks_count: Optional[int] = Field(alias="uniqueClicksCount", default=None)
    ad_spend: Optional["MoneyInput"] = Field(alias="adSpend", default=None)
    is_cumulative: bool = Field(alias="isCumulative")
    utc_offset: Any = Field(alias="utcOffset")
    sales: Optional["MoneyInput"] = None
    sessions_count: Optional[int] = Field(alias="sessionsCount", default=None)
    orders: Optional[Any] = None
    first_time_customers: Optional[Any] = Field(
        alias="firstTimeCustomers", default=None
    )
    returning_customers: Optional[Any] = Field(alias="returningCustomers", default=None)


class MarketplacePaymentsFeatureInput(BaseModel):
    type: MarketplacePaymentsFeatureType
    required: bool


class MetafieldAccessGrantDeleteInput(BaseModel):
    grantee: str


class MetafieldAccessGrantInput(BaseModel):
    grantee: str
    access: MetafieldGrantAccessLevel


class MetafieldAccessGrantOperationInput(BaseModel):
    create: Optional["MetafieldAccessGrantInput"] = None
    update: Optional["MetafieldAccessGrantInput"] = None
    delete: Optional["MetafieldAccessGrantDeleteInput"] = None


class MetafieldAccessInput(BaseModel):
    admin: MetafieldAdminAccess
    storefront: Optional[MetafieldStorefrontAccess] = None
    customer_account: Optional[MetafieldCustomerAccountAccess] = Field(
        alias="customerAccount", default=None
    )
    grants: Optional[List["MetafieldAccessGrantInput"]] = None


class MetafieldAccessUpdateInput(BaseModel):
    admin: MetafieldAdminAccess
    storefront: Optional[MetafieldStorefrontAccess] = None
    customer_account: Optional[MetafieldCustomerAccountAccess] = Field(
        alias="customerAccount", default=None
    )
    grants: Optional[List["MetafieldAccessGrantOperationInput"]] = None


class MetafieldDefinitionInput(BaseModel):
    namespace: Optional[str] = None
    key: str
    name: str
    description: Optional[str] = None
    owner_type: MetafieldOwnerType = Field(alias="ownerType")
    type: str
    validations: Optional[List["MetafieldDefinitionValidationInput"]] = None
    use_as_collection_condition: Optional[bool] = Field(
        alias="useAsCollectionCondition", default=None
    )
    pin: Optional[bool] = None
    access: Optional["MetafieldAccessInput"] = None


class MetafieldDefinitionUpdateInput(BaseModel):
    namespace: Optional[str] = None
    key: str
    name: Optional[str] = None
    description: Optional[str] = None
    owner_type: MetafieldOwnerType = Field(alias="ownerType")
    validations: Optional[List["MetafieldDefinitionValidationInput"]] = None
    pin: Optional[bool] = None
    use_as_collection_condition: Optional[bool] = Field(
        alias="useAsCollectionCondition", default=None
    )
    access: Optional["MetafieldAccessUpdateInput"] = None


class MetafieldDefinitionValidationInput(BaseModel):
    name: str
    value: str


class MetafieldDeleteInput(BaseModel):
    id: str


class MetafieldIdentifierInput(BaseModel):
    owner_id: str = Field(alias="ownerId")
    namespace: str
    key: str


class MetafieldInput(BaseModel):
    id: Optional[str] = None
    namespace: Optional[str] = None
    key: Optional[str] = None
    value: Optional[str] = None
    type: Optional[str] = None


class MetafieldStorefrontVisibilityInput(BaseModel):
    namespace: Optional[str] = None
    key: str
    owner_type: MetafieldOwnerType = Field(alias="ownerType")


class MetafieldsSetInput(BaseModel):
    owner_id: str = Field(alias="ownerId")
    namespace: Optional[str] = None
    key: str
    value: str
    type: Optional[str] = None


class MetaobjectAccessInput(BaseModel):
    admin: Optional[MetaobjectAdminAccess] = None
    storefront: Optional[MetaobjectStorefrontAccess] = None


class MetaobjectBulkDeleteWhereCondition(BaseModel):
    type: Optional[str] = None
    ids: Optional[List[str]] = None


class MetaobjectCapabilityCreateInput(BaseModel):
    publishable: Optional["MetaobjectCapabilityPublishableInput"] = None
    translatable: Optional["MetaobjectCapabilityTranslatableInput"] = None
    renderable: Optional["MetaobjectCapabilityRenderableInput"] = None
    online_store: Optional["MetaobjectCapabilityOnlineStoreInput"] = Field(
        alias="onlineStore", default=None
    )


class MetaobjectCapabilityDataInput(BaseModel):
    publishable: Optional["MetaobjectCapabilityDataPublishableInput"] = None
    online_store: Optional["MetaobjectCapabilityDataOnlineStoreInput"] = Field(
        alias="onlineStore", default=None
    )


class MetaobjectCapabilityDataOnlineStoreInput(BaseModel):
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)


class MetaobjectCapabilityDataPublishableInput(BaseModel):
    status: MetaobjectStatus


class MetaobjectCapabilityDefinitionDataOnlineStoreInput(BaseModel):
    url_handle: str = Field(alias="urlHandle")
    create_redirects: Optional[bool] = Field(alias="createRedirects", default=None)


class MetaobjectCapabilityDefinitionDataRenderableInput(BaseModel):
    meta_title_key: Optional[str] = Field(alias="metaTitleKey", default=None)
    meta_description_key: Optional[str] = Field(
        alias="metaDescriptionKey", default=None
    )


class MetaobjectCapabilityOnlineStoreInput(BaseModel):
    enabled: bool
    data: Optional["MetaobjectCapabilityDefinitionDataOnlineStoreInput"] = None


class MetaobjectCapabilityPublishableInput(BaseModel):
    enabled: bool


class MetaobjectCapabilityRenderableInput(BaseModel):
    enabled: bool
    data: Optional["MetaobjectCapabilityDefinitionDataRenderableInput"] = None


class MetaobjectCapabilityTranslatableInput(BaseModel):
    enabled: bool


class MetaobjectCapabilityUpdateInput(BaseModel):
    publishable: Optional["MetaobjectCapabilityPublishableInput"] = None
    translatable: Optional["MetaobjectCapabilityTranslatableInput"] = None
    renderable: Optional["MetaobjectCapabilityRenderableInput"] = None
    online_store: Optional["MetaobjectCapabilityOnlineStoreInput"] = Field(
        alias="onlineStore", default=None
    )


class MetaobjectCreateInput(BaseModel):
    type: str
    handle: Optional[str] = None
    fields: Optional[List["MetaobjectFieldInput"]] = None
    capabilities: Optional["MetaobjectCapabilityDataInput"] = None


class MetaobjectDefinitionCreateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    type: str
    field_definitions: Optional[List["MetaobjectFieldDefinitionCreateInput"]] = Field(
        alias="fieldDefinitions", default=None
    )
    access: Optional["MetaobjectAccessInput"] = None
    display_name_key: Optional[str] = Field(alias="displayNameKey", default=None)
    visible_to_storefront_api: Optional[bool] = Field(
        alias="visibleToStorefrontApi", default=None
    )
    capabilities: Optional["MetaobjectCapabilityCreateInput"] = None


class MetaobjectDefinitionUpdateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    field_definitions: Optional[
        List["MetaobjectFieldDefinitionOperationInput"]
    ] = Field(alias="fieldDefinitions", default=None)
    access: Optional["MetaobjectAccessInput"] = None
    display_name_key: Optional[str] = Field(alias="displayNameKey", default=None)
    reset_field_order: Optional[bool] = Field(alias="resetFieldOrder", default=None)
    visible_to_storefront_api: Optional[bool] = Field(
        alias="visibleToStorefrontApi", default=None
    )
    capabilities: Optional["MetaobjectCapabilityUpdateInput"] = None


class MetaobjectFieldDefinitionCreateInput(BaseModel):
    key: str
    type: str
    name: Optional[str] = None
    description: Optional[str] = None
    required: Optional[bool] = None
    visible_to_storefront_api: Optional[bool] = Field(
        alias="visibleToStorefrontApi", default=None
    )
    validations: Optional[List["MetafieldDefinitionValidationInput"]] = None


class MetaobjectFieldDefinitionDeleteInput(BaseModel):
    key: str


class MetaobjectFieldDefinitionOperationInput(BaseModel):
    create: Optional["MetaobjectFieldDefinitionCreateInput"] = None
    update: Optional["MetaobjectFieldDefinitionUpdateInput"] = None
    delete: Optional["MetaobjectFieldDefinitionDeleteInput"] = None


class MetaobjectFieldDefinitionUpdateInput(BaseModel):
    key: str
    name: Optional[str] = None
    description: Optional[str] = None
    required: Optional[bool] = None
    visible_to_storefront_api: Optional[bool] = Field(
        alias="visibleToStorefrontApi", default=None
    )
    validations: Optional[List["MetafieldDefinitionValidationInput"]] = None


class MetaobjectFieldInput(BaseModel):
    key: str
    value: str


class MetaobjectHandleInput(BaseModel):
    type: str
    handle: str


class MetaobjectUpdateInput(BaseModel):
    handle: Optional[str] = None
    fields: Optional[List["MetaobjectFieldInput"]] = None
    capabilities: Optional["MetaobjectCapabilityDataInput"] = None
    redirect_new_handle: Optional[bool] = Field(alias="redirectNewHandle", default=None)


class MetaobjectUpsertInput(BaseModel):
    handle: Optional[str] = None
    fields: Optional[List["MetaobjectFieldInput"]] = None
    capabilities: Optional["MetaobjectCapabilityDataInput"] = None


class MobilePlatformApplicationCreateAndroidInput(BaseModel):
    application_id: Optional[str] = Field(alias="applicationId", default=None)
    sha_256_cert_fingerprints: List[str] = Field(alias="sha256CertFingerprints")
    app_links_enabled: bool = Field(alias="appLinksEnabled")


class MobilePlatformApplicationCreateAppleInput(BaseModel):
    app_id: Optional[str] = Field(alias="appId", default=None)
    universal_links_enabled: bool = Field(alias="universalLinksEnabled")
    shared_web_credentials_enabled: bool = Field(alias="sharedWebCredentialsEnabled")
    app_clips_enabled: Optional[bool] = Field(alias="appClipsEnabled", default=None)
    app_clip_application_id: Optional[str] = Field(
        alias="appClipApplicationId", default=None
    )


class MobilePlatformApplicationCreateInput(BaseModel):
    android: Optional["MobilePlatformApplicationCreateAndroidInput"] = None
    apple: Optional["MobilePlatformApplicationCreateAppleInput"] = None


class MobilePlatformApplicationUpdateAndroidInput(BaseModel):
    application_id: Optional[str] = Field(alias="applicationId", default=None)
    sha_256_cert_fingerprints: Optional[List[str]] = Field(
        alias="sha256CertFingerprints", default=None
    )
    app_links_enabled: Optional[bool] = Field(alias="appLinksEnabled", default=None)


class MobilePlatformApplicationUpdateAppleInput(BaseModel):
    app_id: Optional[str] = Field(alias="appId", default=None)
    universal_links_enabled: Optional[bool] = Field(
        alias="universalLinksEnabled", default=None
    )
    shared_web_credentials_enabled: Optional[bool] = Field(
        alias="sharedWebCredentialsEnabled", default=None
    )
    app_clips_enabled: Optional[bool] = Field(alias="appClipsEnabled", default=None)
    app_clip_application_id: Optional[str] = Field(
        alias="appClipApplicationId", default=None
    )


class MobilePlatformApplicationUpdateInput(BaseModel):
    android: Optional["MobilePlatformApplicationUpdateAndroidInput"] = None
    apple: Optional["MobilePlatformApplicationUpdateAppleInput"] = None


class MoneyInput(BaseModel):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class MoveInput(BaseModel):
    id: str
    new_position: Any = Field(alias="newPosition")


class ObjectDimensionsInput(BaseModel):
    length: float
    width: float
    height: float
    unit: LengthUnit


class OptionAndValueInput(BaseModel):
    name: str
    values: List[str]


class OptionCreateInput(BaseModel):
    name: Optional[str] = None
    position: Optional[int] = None
    values: Optional[List["OptionValueCreateInput"]] = None
    linked_metafield: Optional["LinkedMetafieldCreateInput"] = Field(
        alias="linkedMetafield", default=None
    )


class OptionReorderInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    values: Optional[List["OptionValueReorderInput"]] = None


class OptionSetInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    position: Optional[int] = None
    values: Optional[List["OptionValueSetInput"]] = None


class OptionUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    position: Optional[int] = None
    linked_metafield: Optional["LinkedMetafieldUpdateInput"] = Field(
        alias="linkedMetafield", default=None
    )


class OptionValueCreateInput(BaseModel):
    name: Optional[str] = None
    linked_metafield_value: Optional[str] = Field(
        alias="linkedMetafieldValue", default=None
    )


class OptionValueReorderInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None


class OptionValueSetInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None


class OptionValueUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    linked_metafield_value: Optional[str] = Field(
        alias="linkedMetafieldValue", default=None
    )


class OrderCaptureInput(BaseModel):
    id: str
    parent_transaction_id: str = Field(alias="parentTransactionId")
    amount: Any
    currency: Optional[CurrencyCode] = None
    final_capture: Optional[bool] = Field(alias="finalCapture", default=None)


class OrderCloseInput(BaseModel):
    id: str


class OrderEditAddShippingLineInput(BaseModel):
    price: "MoneyInput"
    title: str


class OrderEditAppliedDiscountInput(BaseModel):
    description: Optional[str] = None
    fixed_value: Optional["MoneyInput"] = Field(alias="fixedValue", default=None)
    percent_value: Optional[float] = Field(alias="percentValue", default=None)


class OrderEditUpdateShippingLineInput(BaseModel):
    price: Optional["MoneyInput"] = None
    title: Optional[str] = None


class OrderInput(BaseModel):
    id: str
    email: Optional[str] = None
    note: Optional[str] = None
    tags: Optional[List[str]] = None
    shipping_address: Optional["MailingAddressInput"] = Field(
        alias="shippingAddress", default=None
    )
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None
    localization_extensions: Optional[List["LocalizationExtensionInput"]] = Field(
        alias="localizationExtensions", default=None
    )
    po_number: Optional[str] = Field(alias="poNumber", default=None)


class OrderMarkAsPaidInput(BaseModel):
    id: str


class OrderOpenInput(BaseModel):
    id: str


class OrderRiskAssessmentCreateInput(BaseModel):
    order_id: str = Field(alias="orderId")
    risk_level: RiskAssessmentResult = Field(alias="riskLevel")
    facts: List["OrderRiskAssessmentFactInput"]


class OrderRiskAssessmentFactInput(BaseModel):
    sentiment: RiskFactSentiment
    description: str


class OrderTransactionInput(BaseModel):
    amount: Any
    gateway: str
    kind: OrderTransactionKind
    order_id: str = Field(alias="orderId")
    parent_id: Optional[str] = Field(alias="parentId", default=None)


class PaymentCustomizationInput(BaseModel):
    function_id: Optional[str] = Field(alias="functionId", default=None)
    title: Optional[str] = None
    enabled: Optional[bool] = None
    metafields: Optional[List["MetafieldInput"]] = None


class PaymentScheduleInput(BaseModel):
    issued_at: Optional[Any] = Field(alias="issuedAt", default=None)
    due_at: Optional[Any] = Field(alias="dueAt", default=None)


class PaymentTermsCreateInput(BaseModel):
    payment_terms_template_id: str = Field(alias="paymentTermsTemplateId")
    payment_schedules: Optional[List["PaymentScheduleInput"]] = Field(
        alias="paymentSchedules", default=None
    )


class PaymentTermsDeleteInput(BaseModel):
    payment_terms_id: str = Field(alias="paymentTermsId")


class PaymentTermsInput(BaseModel):
    payment_terms_template_id: Optional[str] = Field(
        alias="paymentTermsTemplateId", default=None
    )
    payment_schedules: Optional[List["PaymentScheduleInput"]] = Field(
        alias="paymentSchedules", default=None
    )


class PaymentTermsUpdateInput(BaseModel):
    payment_terms_id: str = Field(alias="paymentTermsId")
    payment_terms_attributes: "PaymentTermsInput" = Field(
        alias="paymentTermsAttributes"
    )


class PreparedFulfillmentOrderLineItemsInput(BaseModel):
    fulfillment_order_id: str = Field(alias="fulfillmentOrderId")


class PriceInput(BaseModel):
    calculation: Optional[PriceCalculationType] = None
    price: Optional[Any] = None


class PriceListAdjustmentInput(BaseModel):
    value: float
    type: PriceListAdjustmentType


class PriceListAdjustmentSettingsInput(BaseModel):
    compare_at_mode: PriceListCompareAtMode = Field(alias="compareAtMode")


class PriceListCreateInput(BaseModel):
    name: str
    currency: CurrencyCode
    parent: "PriceListParentCreateInput"
    catalog_id: Optional[str] = Field(alias="catalogId", default=None)


class PriceListParentCreateInput(BaseModel):
    adjustment: "PriceListAdjustmentInput"
    settings: Optional["PriceListAdjustmentSettingsInput"] = None


class PriceListParentUpdateInput(BaseModel):
    adjustment: "PriceListAdjustmentInput"
    settings: Optional["PriceListAdjustmentSettingsInput"] = None


class PriceListPriceInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    price: "MoneyInput"
    compare_at_price: Optional["MoneyInput"] = Field(
        alias="compareAtPrice", default=None
    )


class PriceListProductPriceInput(BaseModel):
    product_id: str = Field(alias="productId")
    price: "MoneyInput"


class PriceListUpdateInput(BaseModel):
    name: Optional[str] = None
    currency: Optional[CurrencyCode] = None
    parent: Optional["PriceListParentUpdateInput"] = None
    catalog_id: Optional[str] = Field(alias="catalogId", default=None)


class PriceRuleCustomerSelectionInput(BaseModel):
    for_all_customers: Optional[bool] = Field(alias="forAllCustomers", default=None)
    segment_ids: Optional[List[str]] = Field(alias="segmentIds", default=None)
    customer_ids_to_add: Optional[List[str]] = Field(
        alias="customerIdsToAdd", default=None
    )
    customer_ids_to_remove: Optional[List[str]] = Field(
        alias="customerIdsToRemove", default=None
    )


class PriceRuleDiscountCodeInput(BaseModel):
    code: Optional[str] = None


class PriceRuleEntitlementToPrerequisiteQuantityRatioInput(BaseModel):
    entitlement_quantity: Optional[int] = Field(
        alias="entitlementQuantity", default=None
    )
    prerequisite_quantity: Optional[int] = Field(
        alias="prerequisiteQuantity", default=None
    )


class PriceRuleInput(BaseModel):
    combines_with: Optional["DiscountCombinesWithInput"] = Field(
        alias="combinesWith", default=None
    )
    validity_period: Optional["PriceRuleValidityPeriodInput"] = Field(
        alias="validityPeriod", default=None
    )
    once_per_customer: Optional[bool] = Field(alias="oncePerCustomer", default=None)
    customer_selection: Optional["PriceRuleCustomerSelectionInput"] = Field(
        alias="customerSelection", default=None
    )
    usage_limit: Optional[int] = Field(alias="usageLimit", default=None)
    title: Optional[str] = None
    allocation_limit: Optional[int] = Field(alias="allocationLimit", default=None)
    allocation_method: Optional[PriceRuleAllocationMethod] = Field(
        alias="allocationMethod", default=None
    )
    value: Optional["PriceRuleValueInput"] = None
    target: Optional[PriceRuleTarget] = None
    prerequisite_subtotal_range: Optional["PriceRuleMoneyRangeInput"] = Field(
        alias="prerequisiteSubtotalRange", default=None
    )
    prerequisite_quantity_range: Optional["PriceRuleQuantityRangeInput"] = Field(
        alias="prerequisiteQuantityRange", default=None
    )
    prerequisite_shipping_price_range: Optional["PriceRuleMoneyRangeInput"] = Field(
        alias="prerequisiteShippingPriceRange", default=None
    )
    item_entitlements: Optional["PriceRuleItemEntitlementsInput"] = Field(
        alias="itemEntitlements", default=None
    )
    item_prerequisites: Optional["PriceRuleItemPrerequisitesInput"] = Field(
        alias="itemPrerequisites", default=None
    )
    shipping_entitlements: Optional["PriceRuleShippingEntitlementsInput"] = Field(
        alias="shippingEntitlements", default=None
    )
    prerequisite_to_entitlement_quantity_ratio: Optional[
        "PriceRulePrerequisiteToEntitlementQuantityRatioInput"
    ] = Field(alias="prerequisiteToEntitlementQuantityRatio", default=None)


class PriceRuleItemEntitlementsInput(BaseModel):
    target_all_line_items: Optional[bool] = Field(
        alias="targetAllLineItems", default=None
    )
    product_ids: Optional[List[str]] = Field(alias="productIds", default=None)
    product_variant_ids: Optional[List[str]] = Field(
        alias="productVariantIds", default=None
    )
    collection_ids: Optional[List[str]] = Field(alias="collectionIds", default=None)


class PriceRuleItemPrerequisitesInput(BaseModel):
    product_ids: Optional[List[str]] = Field(alias="productIds", default=None)
    product_variant_ids: Optional[List[str]] = Field(
        alias="productVariantIds", default=None
    )
    collection_ids: Optional[List[str]] = Field(alias="collectionIds", default=None)


class PriceRuleMoneyRangeInput(BaseModel):
    less_than: Optional[Any] = Field(alias="lessThan", default=None)
    less_than_or_equal_to: Optional[Any] = Field(
        alias="lessThanOrEqualTo", default=None
    )
    greater_than: Optional[Any] = Field(alias="greaterThan", default=None)
    greater_than_or_equal_to: Optional[Any] = Field(
        alias="greaterThanOrEqualTo", default=None
    )


class PriceRulePrerequisiteToEntitlementQuantityRatioInput(BaseModel):
    entitlement_quantity: Optional[int] = Field(
        alias="entitlementQuantity", default=None
    )
    prerequisite_quantity: Optional[int] = Field(
        alias="prerequisiteQuantity", default=None
    )


class PriceRuleQuantityRangeInput(BaseModel):
    less_than: Optional[int] = Field(alias="lessThan", default=None)
    less_than_or_equal_to: Optional[int] = Field(
        alias="lessThanOrEqualTo", default=None
    )
    greater_than: Optional[int] = Field(alias="greaterThan", default=None)
    greater_than_or_equal_to: Optional[int] = Field(
        alias="greaterThanOrEqualTo", default=None
    )


class PriceRuleShippingEntitlementsInput(BaseModel):
    target_all_shipping_lines: Optional[bool] = Field(
        alias="targetAllShippingLines", default=None
    )
    country_codes: Optional[List[CountryCode]] = Field(
        alias="countryCodes", default=None
    )
    include_rest_of_world: Optional[bool] = Field(
        alias="includeRestOfWorld", default=None
    )


class PriceRuleValidityPeriodInput(BaseModel):
    start: Any
    end: Optional[Any] = None


class PriceRuleValueInput(BaseModel):
    percentage_value: Optional[float] = Field(alias="percentageValue", default=None)
    fixed_amount_value: Optional[Any] = Field(alias="fixedAmountValue", default=None)


class PrivateMetafieldDeleteInput(BaseModel):
    owner: Optional[str] = None
    namespace: str
    key: str


class PrivateMetafieldInput(BaseModel):
    owner: Optional[str] = None
    namespace: str
    key: str
    value_input: "PrivateMetafieldValueInput" = Field(alias="valueInput")


class PrivateMetafieldValueInput(BaseModel):
    value: str
    value_type: PrivateMetafieldValueType = Field(alias="valueType")


class ProductAppendImagesInput(BaseModel):
    id: str
    images: List["ImageInput"]


class ProductBundleComponentInput(BaseModel):
    quantity: Optional[int] = None
    product_id: str = Field(alias="productId")
    option_selections: List["ProductBundleComponentOptionSelectionInput"] = Field(
        alias="optionSelections"
    )
    quantity_option: Optional["ProductBundleComponentQuantityOptionInput"] = Field(
        alias="quantityOption", default=None
    )


class ProductBundleComponentOptionSelectionInput(BaseModel):
    component_option_id: str = Field(alias="componentOptionId")
    name: str
    values: List[str]


class ProductBundleComponentQuantityOptionInput(BaseModel):
    name: str
    values: List["ProductBundleComponentQuantityOptionValueInput"]


class ProductBundleComponentQuantityOptionValueInput(BaseModel):
    name: str
    quantity: int


class ProductBundleCreateInput(BaseModel):
    title: str
    components: List["ProductBundleComponentInput"]


class ProductBundleUpdateInput(BaseModel):
    product_id: str = Field(alias="productId")
    title: Optional[str] = None
    components: Optional[List["ProductBundleComponentInput"]] = None


class ProductCategoryInput(BaseModel):
    product_taxonomy_node_id: str = Field(alias="productTaxonomyNodeId")


class ProductClaimOwnershipInput(BaseModel):
    bundles: Optional[bool] = None


class ProductDeleteInput(BaseModel):
    id: str


class ProductDuplicateAsyncInput(BaseModel):
    product_id: str = Field(alias="productId")
    new_title: str = Field(alias="newTitle")
    new_status: Optional[ProductStatus] = Field(alias="newStatus", default=None)
    include_images: Optional[bool] = Field(alias="includeImages", default=None)
    include_translations: Optional[bool] = Field(
        alias="includeTranslations", default=None
    )


class ProductFeedInput(BaseModel):
    language: LanguageCode
    country: CountryCode


class ProductInput(BaseModel):
    description_html: Optional[str] = Field(alias="descriptionHtml", default=None)
    handle: Optional[str] = None
    redirect_new_handle: Optional[bool] = Field(alias="redirectNewHandle", default=None)
    seo: Optional["SEOInput"] = None
    product_type: Optional[str] = Field(alias="productType", default=None)
    category: Optional[str] = None
    custom_product_type: Optional[str] = Field(alias="customProductType", default=None)
    tags: Optional[List[str]] = None
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)
    gift_card: Optional[bool] = Field(alias="giftCard", default=None)
    gift_card_template_suffix: Optional[str] = Field(
        alias="giftCardTemplateSuffix", default=None
    )
    title: Optional[str] = None
    vendor: Optional[str] = None
    collections_to_join: Optional[List[str]] = Field(
        alias="collectionsToJoin", default=None
    )
    collections_to_leave: Optional[List[str]] = Field(
        alias="collectionsToLeave", default=None
    )
    combined_listing_role: Optional[CombinedListingsRole] = Field(
        alias="combinedListingRole", default=None
    )
    id: Optional[str] = None
    metafields: Optional[List["MetafieldInput"]] = None
    product_options: Optional[List["OptionCreateInput"]] = Field(
        alias="productOptions", default=None
    )
    status: Optional[ProductStatus] = None
    requires_selling_plan: Optional[bool] = Field(
        alias="requiresSellingPlan", default=None
    )
    claim_ownership: Optional["ProductClaimOwnershipInput"] = Field(
        alias="claimOwnership", default=None
    )


class ProductPreferencesInput(BaseModel):
    show_sku_and_barcode: bool = Field(alias="showSkuAndBarcode")
    show_international_shipping: bool = Field(alias="showInternationalShipping")


class ProductPublicationInput(BaseModel):
    publication_id: Optional[str] = Field(alias="publicationId", default=None)
    publish_date: Optional[Any] = Field(alias="publishDate", default=None)


class ProductPublishInput(BaseModel):
    id: str
    product_publications: List["ProductPublicationInput"] = Field(
        alias="productPublications"
    )


class ProductResourceFeedbackInput(BaseModel):
    product_id: str = Field(alias="productId")
    state: ResourceFeedbackState
    feedback_generated_at: Any = Field(alias="feedbackGeneratedAt")
    product_updated_at: Any = Field(alias="productUpdatedAt")
    messages: Optional[List[str]] = None


class ProductSetInput(BaseModel):
    description_html: Optional[str] = Field(alias="descriptionHtml", default=None)
    handle: Optional[str] = None
    redirect_new_handle: Optional[bool] = Field(alias="redirectNewHandle", default=None)
    seo: Optional["SEOInput"] = None
    product_type: Optional[str] = Field(alias="productType", default=None)
    category: Optional[str] = None
    custom_product_type: Optional[str] = Field(alias="customProductType", default=None)
    tags: Optional[List[str]] = None
    template_suffix: Optional[str] = Field(alias="templateSuffix", default=None)
    gift_card: Optional[bool] = Field(alias="giftCard", default=None)
    gift_card_template_suffix: Optional[str] = Field(
        alias="giftCardTemplateSuffix", default=None
    )
    title: Optional[str] = None
    vendor: Optional[str] = None
    id: Optional[str] = None
    collections: Optional[List[str]] = None
    metafields: Optional[List["MetafieldInput"]] = None
    variants: List["ProductVariantSetInput"]
    media_ids: Optional[List[str]] = Field(alias="mediaIds", default=None)
    status: Optional[ProductStatus] = None
    requires_selling_plan: Optional[bool] = Field(
        alias="requiresSellingPlan", default=None
    )
    product_options: List["OptionSetInput"] = Field(alias="productOptions")
    claim_ownership: Optional["ProductClaimOwnershipInput"] = Field(
        alias="claimOwnership", default=None
    )
    combined_listing_role: Optional[CombinedListingsRole] = Field(
        alias="combinedListingRole", default=None
    )


class ProductUnpublishInput(BaseModel):
    id: str
    product_publications: List["ProductPublicationInput"] = Field(
        alias="productPublications"
    )


class ProductVariantAppendMediaInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    media_ids: List[str] = Field(alias="mediaIds")


class ProductVariantDetachMediaInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    media_ids: List[str] = Field(alias="mediaIds")


class ProductVariantGroupRelationshipInput(BaseModel):
    id: str
    quantity: int


class ProductVariantInput(BaseModel):
    requires_components: Optional[bool] = Field(
        alias="requiresComponents", default=None
    )
    barcode: Optional[str] = None
    compare_at_price: Optional[Any] = Field(alias="compareAtPrice", default=None)
    id: Optional[str] = None
    media_id: Optional[str] = Field(alias="mediaId", default=None)
    media_src: Optional[List[str]] = Field(alias="mediaSrc", default=None)
    inventory_policy: Optional[ProductVariantInventoryPolicy] = Field(
        alias="inventoryPolicy", default=None
    )
    inventory_quantities: Optional[List["InventoryLevelInput"]] = Field(
        alias="inventoryQuantities", default=None
    )
    inventory_item: Optional["InventoryItemInput"] = Field(
        alias="inventoryItem", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None
    options: Optional[List[str]] = None
    position: Optional[int] = None
    price: Optional[Any] = None
    product_id: Optional[str] = Field(alias="productId", default=None)
    sku: Optional[str] = None
    taxable: Optional[bool] = None
    tax_code: Optional[str] = Field(alias="taxCode", default=None)


class ProductVariantPositionInput(BaseModel):
    id: str
    position: int


class ProductVariantRelationshipUpdateInput(BaseModel):
    parent_product_variant_id: Optional[str] = Field(
        alias="parentProductVariantId", default=None
    )
    parent_product_id: Optional[str] = Field(alias="parentProductId", default=None)
    product_variant_relationships_to_create: Optional[
        List["ProductVariantGroupRelationshipInput"]
    ] = Field(alias="productVariantRelationshipsToCreate", default=None)
    product_variant_relationships_to_update: Optional[
        List["ProductVariantGroupRelationshipInput"]
    ] = Field(alias="productVariantRelationshipsToUpdate", default=None)
    product_variant_relationships_to_remove: Optional[List[str]] = Field(
        alias="productVariantRelationshipsToRemove", default=None
    )
    remove_all_product_variant_relationships: Optional[bool] = Field(
        alias="removeAllProductVariantRelationships", default=None
    )
    price_input: Optional["PriceInput"] = Field(alias="priceInput", default=None)


class ProductVariantSetInput(BaseModel):
    requires_components: Optional[bool] = Field(
        alias="requiresComponents", default=None
    )
    barcode: Optional[str] = None
    compare_at_price: Optional[Any] = Field(alias="compareAtPrice", default=None)
    harmonized_system_code: Optional[str] = Field(
        alias="harmonizedSystemCode", default=None
    )
    id: Optional[str] = None
    media_id: Optional[str] = Field(alias="mediaId", default=None)
    inventory_policy: Optional[ProductVariantInventoryPolicy] = Field(
        alias="inventoryPolicy", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None
    option_values: List["VariantOptionValueInput"] = Field(alias="optionValues")
    position: Optional[int] = None
    price: Optional[Any] = None
    requires_shipping: Optional[bool] = Field(alias="requiresShipping", default=None)
    sku: Optional[str] = None
    taxable: Optional[bool] = None
    tax_code: Optional[str] = Field(alias="taxCode", default=None)
    weight: Optional[float] = None
    weight_unit: Optional[WeightUnit] = Field(alias="weightUnit", default=None)


class ProductVariantsBulkInput(BaseModel):
    barcode: Optional[str] = None
    compare_at_price: Optional[Any] = Field(alias="compareAtPrice", default=None)
    id: Optional[str] = None
    media_src: Optional[List[str]] = Field(alias="mediaSrc", default=None)
    inventory_policy: Optional[ProductVariantInventoryPolicy] = Field(
        alias="inventoryPolicy", default=None
    )
    inventory_quantities: Optional[List["InventoryLevelInput"]] = Field(
        alias="inventoryQuantities", default=None
    )
    inventory_item: Optional["InventoryItemInput"] = Field(
        alias="inventoryItem", default=None
    )
    media_id: Optional[str] = Field(alias="mediaId", default=None)
    metafields: Optional[List["MetafieldInput"]] = None
    option_values: Optional[List["VariantOptionValueInput"]] = Field(
        alias="optionValues", default=None
    )
    price: Optional[Any] = None
    sku: Optional[str] = None
    taxable: Optional[bool] = None
    tax_code: Optional[str] = Field(alias="taxCode", default=None)


class PubSubWebhookSubscriptionInput(BaseModel):
    pub_sub_project: str = Field(alias="pubSubProject")
    pub_sub_topic: str = Field(alias="pubSubTopic")
    format: Optional[WebhookSubscriptionFormat] = None
    include_fields: Optional[List[str]] = Field(alias="includeFields", default=None)
    metafield_namespaces: Optional[List[str]] = Field(
        alias="metafieldNamespaces", default=None
    )


class PublicationCreateInput(BaseModel):
    catalog_id: Optional[str] = Field(alias="catalogId", default=None)
    default_state: Optional[PublicationCreateInputPublicationDefaultState] = Field(
        alias="defaultState", default=None
    )
    auto_publish: Optional[bool] = Field(alias="autoPublish", default=None)


class PublicationInput(BaseModel):
    publication_id: Optional[str] = Field(alias="publicationId", default=None)
    publish_date: Optional[Any] = Field(alias="publishDate", default=None)


class PublicationUpdateInput(BaseModel):
    publishables_to_add: Optional[List[str]] = Field(
        alias="publishablesToAdd", default=None
    )
    publishables_to_remove: Optional[List[str]] = Field(
        alias="publishablesToRemove", default=None
    )
    auto_publish: Optional[bool] = Field(alias="autoPublish", default=None)


class PurchasingCompanyInput(BaseModel):
    company_id: str = Field(alias="companyId")
    company_contact_id: str = Field(alias="companyContactId")
    company_location_id: str = Field(alias="companyLocationId")


class PurchasingEntityInput(BaseModel):
    customer_id: Optional[str] = Field(alias="customerId", default=None)
    purchasing_company: Optional["PurchasingCompanyInput"] = Field(
        alias="purchasingCompany", default=None
    )


class QuantityPriceBreakInput(BaseModel):
    variant_id: str = Field(alias="variantId")
    price: "MoneyInput"
    minimum_quantity: int = Field(alias="minimumQuantity")


class QuantityPricingByVariantUpdateInput(BaseModel):
    quantity_price_breaks_to_add: List["QuantityPriceBreakInput"] = Field(
        alias="quantityPriceBreaksToAdd"
    )
    quantity_price_breaks_to_delete: List[str] = Field(
        alias="quantityPriceBreaksToDelete"
    )
    quantity_rules_to_add: List["QuantityRuleInput"] = Field(alias="quantityRulesToAdd")
    quantity_rules_to_delete_by_variant_id: List[str] = Field(
        alias="quantityRulesToDeleteByVariantId"
    )
    prices_to_add: List["PriceListPriceInput"] = Field(alias="pricesToAdd")
    prices_to_delete_by_variant_id: List[str] = Field(alias="pricesToDeleteByVariantId")


class QuantityRuleInput(BaseModel):
    increment: int
    maximum: Optional[int] = None
    minimum: int
    variant_id: str = Field(alias="variantId")


class RefundAdditionalFeeInput(BaseModel):
    additional_fee_id: str = Field(alias="additionalFeeId")


class RefundDutyInput(BaseModel):
    duty_id: str = Field(alias="dutyId")
    refund_type: Optional[RefundDutyRefundType] = Field(
        alias="refundType", default=None
    )


class RefundInput(BaseModel):
    currency: Optional[CurrencyCode] = None
    order_id: str = Field(alias="orderId")
    note: Optional[str] = None
    notify: Optional[bool] = None
    shipping: Optional["ShippingRefundInput"] = None
    refund_line_items: Optional[List["RefundLineItemInput"]] = Field(
        alias="refundLineItems", default=None
    )
    refund_duties: Optional[List["RefundDutyInput"]] = Field(
        alias="refundDuties", default=None
    )
    refund_additional_fees: Optional[List["RefundAdditionalFeeInput"]] = Field(
        alias="refundAdditionalFees", default=None
    )
    transactions: Optional[List["OrderTransactionInput"]] = None


class RefundLineItemInput(BaseModel):
    line_item_id: str = Field(alias="lineItemId")
    quantity: int
    restock_type: Optional[RefundLineItemRestockType] = Field(
        alias="restockType", default=None
    )
    location_id: Optional[str] = Field(alias="locationId", default=None)


class RefundShippingInput(BaseModel):
    shipping_refund_amount: Optional["MoneyInput"] = Field(
        alias="shippingRefundAmount", default=None
    )
    full_refund: Optional[bool] = Field(alias="fullRefund", default=None)


class RemoteAuthorizeNetCustomerPaymentProfileInput(BaseModel):
    customer_profile_id: str = Field(alias="customerProfileId")
    customer_payment_profile_id: Optional[str] = Field(
        alias="customerPaymentProfileId", default=None
    )


class RemoteBraintreePaymentMethodInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    payment_method_token: Optional[str] = Field(
        alias="paymentMethodToken", default=None
    )


class RemotePaypalPaymentMethodInput(BaseModel):
    billing_agreement_id: str = Field(alias="billingAgreementId")
    billing_address: "MailingAddressInput" = Field(alias="billingAddress")


class RemoteStripePaymentMethodInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    payment_method_id: Optional[str] = Field(alias="paymentMethodId", default=None)


class ResourceFeedbackCreateInput(BaseModel):
    feedback_generated_at: Any = Field(alias="feedbackGeneratedAt")
    messages: Optional[List[str]] = None
    state: ResourceFeedbackState


class RestockingFeeInput(BaseModel):
    percentage: float


class ReturnApproveRequestInput(BaseModel):
    id: str


class ReturnDeclineRequestInput(BaseModel):
    id: str
    decline_reason: ReturnDeclineReason = Field(alias="declineReason")


class ReturnInput(BaseModel):
    order_id: str = Field(alias="orderId")
    return_line_items: List["ReturnLineItemInput"] = Field(alias="returnLineItems")
    exchange_line_items: Optional[List["ExchangeLineItemInput"]] = Field(
        alias="exchangeLineItems", default=None
    )
    return_shipping_fee: Optional["ReturnShippingFeeInput"] = Field(
        alias="returnShippingFee", default=None
    )
    notify_customer: Optional[bool] = Field(alias="notifyCustomer", default=None)
    requested_at: Optional[Any] = Field(alias="requestedAt", default=None)


class ReturnLineItemInput(BaseModel):
    fulfillment_line_item_id: str = Field(alias="fulfillmentLineItemId")
    quantity: int
    return_reason: ReturnReason = Field(alias="returnReason")
    return_reason_note: Optional[str] = Field(alias="returnReasonNote", default=None)
    restocking_fee: Optional["RestockingFeeInput"] = Field(
        alias="restockingFee", default=None
    )


class ReturnLineItemRemoveFromReturnInput(BaseModel):
    return_line_item_id: str = Field(alias="returnLineItemId")
    quantity: int


class ReturnRefundInput(BaseModel):
    return_id: str = Field(alias="returnId")
    return_refund_line_items: List["ReturnRefundLineItemInput"] = Field(
        alias="returnRefundLineItems"
    )
    refund_shipping: Optional["RefundShippingInput"] = Field(
        alias="refundShipping", default=None
    )
    refund_duties: Optional[List["RefundDutyInput"]] = Field(
        alias="refundDuties", default=None
    )
    order_transactions: Optional[List["ReturnRefundOrderTransactionInput"]] = Field(
        alias="orderTransactions", default=None
    )
    notify_customer: Optional[bool] = Field(alias="notifyCustomer", default=None)
    note: Optional[str] = None


class ReturnRefundLineItemInput(BaseModel):
    return_line_item_id: str = Field(alias="returnLineItemId")
    quantity: int


class ReturnRefundOrderTransactionInput(BaseModel):
    transaction_amount: "MoneyInput" = Field(alias="transactionAmount")
    parent_id: str = Field(alias="parentId")


class ReturnRequestInput(BaseModel):
    order_id: str = Field(alias="orderId")
    return_line_items: List["ReturnRequestLineItemInput"] = Field(
        alias="returnLineItems"
    )
    return_shipping_fee: Optional["ReturnShippingFeeInput"] = Field(
        alias="returnShippingFee", default=None
    )


class ReturnRequestLineItemInput(BaseModel):
    fulfillment_line_item_id: str = Field(alias="fulfillmentLineItemId")
    quantity: int
    restocking_fee: Optional["RestockingFeeInput"] = Field(
        alias="restockingFee", default=None
    )
    return_reason: ReturnReason = Field(alias="returnReason")
    customer_note: Optional[str] = Field(alias="customerNote", default=None)


class ReturnShippingFeeInput(BaseModel):
    amount: "MoneyInput"


class ReverseDeliveryDisposeInput(BaseModel):
    reverse_delivery_line_item_id: str = Field(alias="reverseDeliveryLineItemId")
    quantity: int
    disposition_type: ReverseFulfillmentOrderDispositionType = Field(
        alias="dispositionType"
    )
    location_id: Optional[str] = Field(alias="locationId", default=None)


class ReverseDeliveryLabelInput(BaseModel):
    file_url: Any = Field(alias="fileUrl")


class ReverseDeliveryLineItemInput(BaseModel):
    reverse_fulfillment_order_line_item_id: str = Field(
        alias="reverseFulfillmentOrderLineItemId"
    )
    quantity: int


class ReverseDeliveryTrackingInput(BaseModel):
    number: Optional[str] = None
    url: Optional[Any] = None


class ReverseFulfillmentOrderDisposeInput(BaseModel):
    reverse_fulfillment_order_line_item_id: str = Field(
        alias="reverseFulfillmentOrderLineItemId"
    )
    quantity: int
    location_id: Optional[str] = Field(alias="locationId", default=None)
    disposition_type: ReverseFulfillmentOrderDispositionType = Field(
        alias="dispositionType"
    )


class SEOInput(BaseModel):
    title: Optional[str] = None
    description: Optional[str] = None


class SavedSearchCreateInput(BaseModel):
    resource_type: SearchResultType = Field(alias="resourceType")
    name: str
    query: str


class SavedSearchDeleteInput(BaseModel):
    id: str


class SavedSearchUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    query: Optional[str] = None


class ScriptTagInput(BaseModel):
    src: Optional[Any] = None
    display_scope: Optional[ScriptTagDisplayScope] = Field(
        alias="displayScope", default=None
    )
    cache: Optional[bool] = None


class SelectedVariantOptionInput(BaseModel):
    name: str
    value: str


class SellingPlanAnchorInput(BaseModel):
    type: Optional[SellingPlanAnchorType] = None
    day: Optional[int] = None
    month: Optional[int] = None
    cutoff_day: Optional[int] = Field(alias="cutoffDay", default=None)


class SellingPlanBillingPolicyInput(BaseModel):
    fixed: Optional["SellingPlanFixedBillingPolicyInput"] = None
    recurring: Optional["SellingPlanRecurringBillingPolicyInput"] = None


class SellingPlanCheckoutChargeInput(BaseModel):
    type: Optional[SellingPlanCheckoutChargeType] = None
    value: Optional["SellingPlanCheckoutChargeValueInput"] = None


class SellingPlanCheckoutChargeValueInput(BaseModel):
    percentage: Optional[float] = None
    fixed_value: Optional[Any] = Field(alias="fixedValue", default=None)


class SellingPlanDeliveryPolicyInput(BaseModel):
    fixed: Optional["SellingPlanFixedDeliveryPolicyInput"] = None
    recurring: Optional["SellingPlanRecurringDeliveryPolicyInput"] = None


class SellingPlanFixedBillingPolicyInput(BaseModel):
    remaining_balance_charge_trigger: Optional[
        SellingPlanRemainingBalanceChargeTrigger
    ] = Field(alias="remainingBalanceChargeTrigger", default=None)
    remaining_balance_charge_exact_time: Optional[Any] = Field(
        alias="remainingBalanceChargeExactTime", default=None
    )
    remaining_balance_charge_time_after_checkout: Optional[str] = Field(
        alias="remainingBalanceChargeTimeAfterCheckout", default=None
    )
    checkout_charge: Optional["SellingPlanCheckoutChargeInput"] = Field(
        alias="checkoutCharge", default=None
    )


class SellingPlanFixedDeliveryPolicyInput(BaseModel):
    anchors: Optional[List["SellingPlanAnchorInput"]] = None
    fulfillment_trigger: Optional[SellingPlanFulfillmentTrigger] = Field(
        alias="fulfillmentTrigger", default=None
    )
    fulfillment_exact_time: Optional[Any] = Field(
        alias="fulfillmentExactTime", default=None
    )
    cutoff: Optional[int] = None
    intent: Optional[SellingPlanFixedDeliveryPolicyIntent] = None
    pre_anchor_behavior: Optional[
        SellingPlanFixedDeliveryPolicyPreAnchorBehavior
    ] = Field(alias="preAnchorBehavior", default=None)


class SellingPlanFixedPricingPolicyInput(BaseModel):
    id: Optional[str] = None
    adjustment_type: Optional[SellingPlanPricingPolicyAdjustmentType] = Field(
        alias="adjustmentType", default=None
    )
    adjustment_value: Optional["SellingPlanPricingPolicyValueInput"] = Field(
        alias="adjustmentValue", default=None
    )


class SellingPlanGroupInput(BaseModel):
    name: Optional[str] = None
    app_id: Optional[str] = Field(alias="appId", default=None)
    merchant_code: Optional[str] = Field(alias="merchantCode", default=None)
    description: Optional[str] = None
    selling_plans_to_create: Optional[List["SellingPlanInput"]] = Field(
        alias="sellingPlansToCreate", default=None
    )
    selling_plans_to_update: Optional[List["SellingPlanInput"]] = Field(
        alias="sellingPlansToUpdate", default=None
    )
    selling_plans_to_delete: Optional[List[str]] = Field(
        alias="sellingPlansToDelete", default=None
    )
    options: Optional[List[str]] = None
    position: Optional[int] = None


class SellingPlanGroupResourceInput(BaseModel):
    product_variant_ids: Optional[List[str]] = Field(
        alias="productVariantIds", default=None
    )
    product_ids: Optional[List[str]] = Field(alias="productIds", default=None)


class SellingPlanInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    billing_policy: Optional["SellingPlanBillingPolicyInput"] = Field(
        alias="billingPolicy", default=None
    )
    delivery_policy: Optional["SellingPlanDeliveryPolicyInput"] = Field(
        alias="deliveryPolicy", default=None
    )
    inventory_policy: Optional["SellingPlanInventoryPolicyInput"] = Field(
        alias="inventoryPolicy", default=None
    )
    metafields: Optional[List["MetafieldInput"]] = None
    pricing_policies: Optional[List["SellingPlanPricingPolicyInput"]] = Field(
        alias="pricingPolicies", default=None
    )
    options: Optional[List[str]] = None
    position: Optional[int] = None
    category: Optional[SellingPlanCategory] = None


class SellingPlanInventoryPolicyInput(BaseModel):
    reserve: Optional[SellingPlanReserve] = None


class SellingPlanPricingPolicyInput(BaseModel):
    recurring: Optional["SellingPlanRecurringPricingPolicyInput"] = None
    fixed: Optional["SellingPlanFixedPricingPolicyInput"] = None


class SellingPlanPricingPolicyValueInput(BaseModel):
    percentage: Optional[float] = None
    fixed_value: Optional[Any] = Field(alias="fixedValue", default=None)


class SellingPlanRecurringBillingPolicyInput(BaseModel):
    interval: Optional[SellingPlanInterval] = None
    interval_count: Optional[int] = Field(alias="intervalCount", default=None)
    anchors: Optional[List["SellingPlanAnchorInput"]] = None
    min_cycles: Optional[int] = Field(alias="minCycles", default=None)
    max_cycles: Optional[int] = Field(alias="maxCycles", default=None)


class SellingPlanRecurringDeliveryPolicyInput(BaseModel):
    interval: Optional[SellingPlanInterval] = None
    interval_count: Optional[int] = Field(alias="intervalCount", default=None)
    anchors: Optional[List["SellingPlanAnchorInput"]] = None
    cutoff: Optional[int] = None
    intent: Optional[SellingPlanRecurringDeliveryPolicyIntent] = None
    pre_anchor_behavior: Optional[
        SellingPlanRecurringDeliveryPolicyPreAnchorBehavior
    ] = Field(alias="preAnchorBehavior", default=None)


class SellingPlanRecurringPricingPolicyInput(BaseModel):
    id: Optional[str] = None
    adjustment_type: Optional[SellingPlanPricingPolicyAdjustmentType] = Field(
        alias="adjustmentType", default=None
    )
    adjustment_value: Optional["SellingPlanPricingPolicyValueInput"] = Field(
        alias="adjustmentValue", default=None
    )
    after_cycle: int = Field(alias="afterCycle")


class ShippingLineInput(BaseModel):
    price: Optional[Any] = None
    price_with_currency: Optional["MoneyInput"] = Field(
        alias="priceWithCurrency", default=None
    )
    shipping_rate_handle: Optional[str] = Field(
        alias="shippingRateHandle", default=None
    )
    title: Optional[str] = None


class ShippingRefundInput(BaseModel):
    amount: Optional[Any] = None
    full_refund: Optional[bool] = Field(alias="fullRefund", default=None)


class ShopLocaleInput(BaseModel):
    published: Optional[bool] = None
    market_web_presence_ids: Optional[List[str]] = Field(
        alias="marketWebPresenceIds", default=None
    )


class ShopPolicyInput(BaseModel):
    type: ShopPolicyType
    body: str


class ShopifyPaymentsDisputeEvidenceUpdateInput(BaseModel):
    customer_email_address: Optional[str] = Field(
        alias="customerEmailAddress", default=None
    )
    customer_last_name: Optional[str] = Field(alias="customerLastName", default=None)
    customer_first_name: Optional[str] = Field(alias="customerFirstName", default=None)
    shipping_address: Optional["MailingAddressInput"] = Field(
        alias="shippingAddress", default=None
    )
    uncategorized_text: Optional[str] = Field(alias="uncategorizedText", default=None)
    access_activity_log: Optional[str] = Field(alias="accessActivityLog", default=None)
    cancellation_policy_disclosure: Optional[str] = Field(
        alias="cancellationPolicyDisclosure", default=None
    )
    cancellation_rebuttal: Optional[str] = Field(
        alias="cancellationRebuttal", default=None
    )
    refund_policy_disclosure: Optional[str] = Field(
        alias="refundPolicyDisclosure", default=None
    )
    refund_refusal_explanation: Optional[str] = Field(
        alias="refundRefusalExplanation", default=None
    )
    cancellation_policy_file: Optional[
        "ShopifyPaymentsDisputeFileUploadUpdateInput"
    ] = Field(alias="cancellationPolicyFile", default=None)
    customer_communication_file: Optional[
        "ShopifyPaymentsDisputeFileUploadUpdateInput"
    ] = Field(alias="customerCommunicationFile", default=None)
    refund_policy_file: Optional["ShopifyPaymentsDisputeFileUploadUpdateInput"] = Field(
        alias="refundPolicyFile", default=None
    )
    shipping_documentation_file: Optional[
        "ShopifyPaymentsDisputeFileUploadUpdateInput"
    ] = Field(alias="shippingDocumentationFile", default=None)
    uncategorized_file: Optional["ShopifyPaymentsDisputeFileUploadUpdateInput"] = Field(
        alias="uncategorizedFile", default=None
    )
    service_documentation_file: Optional[
        "ShopifyPaymentsDisputeFileUploadUpdateInput"
    ] = Field(alias="serviceDocumentationFile", default=None)
    submit_evidence: Optional[bool] = Field(alias="submitEvidence", default=None)


class ShopifyPaymentsDisputeFileUploadUpdateInput(BaseModel):
    id: str
    destroy: Optional[bool] = None


class StageImageInput(BaseModel):
    resource: StagedUploadTargetGenerateUploadResource
    filename: str
    mime_type: str = Field(alias="mimeType")
    http_method: Optional[StagedUploadHttpMethodType] = Field(
        alias="httpMethod", default=None
    )


class StagedUploadInput(BaseModel):
    resource: StagedUploadTargetGenerateUploadResource
    filename: str
    mime_type: str = Field(alias="mimeType")
    http_method: Optional[StagedUploadHttpMethodType] = Field(
        alias="httpMethod", default=None
    )
    file_size: Optional[Any] = Field(alias="fileSize", default=None)


class StagedUploadTargetGenerateInput(BaseModel):
    resource: StagedUploadTargetGenerateUploadResource
    filename: str
    mime_type: str = Field(alias="mimeType")
    http_method: Optional[StagedUploadHttpMethodType] = Field(
        alias="httpMethod", default=None
    )
    file_size: Optional[Any] = Field(alias="fileSize", default=None)


class StandardMetafieldDefinitionsEnableInput(BaseModel):
    owner_type: MetafieldOwnerType = Field(alias="ownerType")
    namespace: str
    key: str
    pin: Optional[bool] = None
    visible_to_storefront_api: Optional[bool] = Field(
        alias="visibleToStorefrontApi", default=None
    )


class StandardizedProductTypeInput(BaseModel):
    product_taxonomy_node_id: str = Field(alias="productTaxonomyNodeId")


class StoreCreditAccountCreditInput(BaseModel):
    credit_amount: "MoneyInput" = Field(alias="creditAmount")
    expires_at: Optional[Any] = Field(alias="expiresAt", default=None)


class StoreCreditAccountDebitInput(BaseModel):
    debit_amount: "MoneyInput" = Field(alias="debitAmount")


class StorefrontAccessTokenDeleteInput(BaseModel):
    id: str


class StorefrontAccessTokenInput(BaseModel):
    title: str


class SubscriptionAtomicLineInput(BaseModel):
    line: "SubscriptionLineInput"
    discounts: Optional[List["SubscriptionAtomicManualDiscountInput"]] = None


class SubscriptionAtomicManualDiscountInput(BaseModel):
    title: Optional[str] = None
    value: Optional["SubscriptionManualDiscountValueInput"] = None
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )


class SubscriptionBillingAttemptInput(BaseModel):
    idempotency_key: str = Field(alias="idempotencyKey")
    origin_time: Optional[Any] = Field(alias="originTime", default=None)
    billing_cycle_selector: Optional["SubscriptionBillingCycleSelector"] = Field(
        alias="billingCycleSelector", default=None
    )


class SubscriptionBillingCycleInput(BaseModel):
    contract_id: str = Field(alias="contractId")
    selector: "SubscriptionBillingCycleSelector"


class SubscriptionBillingCycleScheduleEditInput(BaseModel):
    skip: Optional[bool] = None
    billing_date: Optional[Any] = Field(alias="billingDate", default=None)
    reason: SubscriptionBillingCycleScheduleEditInputScheduleEditReason


class SubscriptionBillingCycleSelector(BaseModel):
    index: Optional[int] = None
    date: Optional[Any] = None


class SubscriptionBillingCyclesDateRangeSelector(BaseModel):
    start_date: Any = Field(alias="startDate")
    end_date: Any = Field(alias="endDate")


class SubscriptionBillingCyclesIndexRangeSelector(BaseModel):
    start_index: int = Field(alias="startIndex")
    end_index: int = Field(alias="endIndex")


class SubscriptionBillingPolicyInput(BaseModel):
    interval: SellingPlanInterval
    interval_count: int = Field(alias="intervalCount")
    min_cycles: Optional[int] = Field(alias="minCycles", default=None)
    max_cycles: Optional[int] = Field(alias="maxCycles", default=None)
    anchors: Optional[List["SellingPlanAnchorInput"]] = None


class SubscriptionContractAtomicCreateInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    next_billing_date: Any = Field(alias="nextBillingDate")
    currency_code: CurrencyCode = Field(alias="currencyCode")
    contract: "SubscriptionDraftInput"
    lines: List["SubscriptionAtomicLineInput"]
    discount_codes: Optional[List[str]] = Field(alias="discountCodes", default=None)


class SubscriptionContractCreateInput(BaseModel):
    customer_id: str = Field(alias="customerId")
    next_billing_date: Any = Field(alias="nextBillingDate")
    currency_code: CurrencyCode = Field(alias="currencyCode")
    contract: "SubscriptionDraftInput"


class SubscriptionContractProductChangeInput(BaseModel):
    product_variant_id: Optional[str] = Field(alias="productVariantId", default=None)
    current_price: Optional[Any] = Field(alias="currentPrice", default=None)


class SubscriptionDeliveryMethodInput(BaseModel):
    shipping: Optional["SubscriptionDeliveryMethodShippingInput"] = None
    local_delivery: Optional["SubscriptionDeliveryMethodLocalDeliveryInput"] = Field(
        alias="localDelivery", default=None
    )
    pickup: Optional["SubscriptionDeliveryMethodPickupInput"] = None


class SubscriptionDeliveryMethodLocalDeliveryInput(BaseModel):
    address: Optional["MailingAddressInput"] = None
    local_delivery_option: Optional[
        "SubscriptionDeliveryMethodLocalDeliveryOptionInput"
    ] = Field(alias="localDeliveryOption", default=None)


class SubscriptionDeliveryMethodLocalDeliveryOptionInput(BaseModel):
    title: Optional[str] = None
    presentment_title: Optional[str] = Field(alias="presentmentTitle", default=None)
    description: Optional[str] = None
    code: Optional[str] = None
    phone: str
    instructions: Optional[str] = None


class SubscriptionDeliveryMethodPickupInput(BaseModel):
    pickup_option: Optional["SubscriptionDeliveryMethodPickupOptionInput"] = Field(
        alias="pickupOption", default=None
    )


class SubscriptionDeliveryMethodPickupOptionInput(BaseModel):
    title: Optional[str] = None
    presentment_title: Optional[str] = Field(alias="presentmentTitle", default=None)
    description: Optional[str] = None
    code: Optional[str] = None
    location_id: str = Field(alias="locationId")


class SubscriptionDeliveryMethodShippingInput(BaseModel):
    address: Optional["MailingAddressInput"] = None
    shipping_option: Optional["SubscriptionDeliveryMethodShippingOptionInput"] = Field(
        alias="shippingOption", default=None
    )


class SubscriptionDeliveryMethodShippingOptionInput(BaseModel):
    title: Optional[str] = None
    presentment_title: Optional[str] = Field(alias="presentmentTitle", default=None)
    description: Optional[str] = None
    code: Optional[str] = None
    carrier_service_id: Optional[str] = Field(alias="carrierServiceId", default=None)


class SubscriptionDeliveryPolicyInput(BaseModel):
    interval: SellingPlanInterval
    interval_count: int = Field(alias="intervalCount")
    anchors: Optional[List["SellingPlanAnchorInput"]] = None


class SubscriptionDraftInput(BaseModel):
    status: Optional[SubscriptionContractSubscriptionStatus] = None
    payment_method_id: Optional[str] = Field(alias="paymentMethodId", default=None)
    next_billing_date: Optional[Any] = Field(alias="nextBillingDate", default=None)
    billing_policy: Optional["SubscriptionBillingPolicyInput"] = Field(
        alias="billingPolicy", default=None
    )
    delivery_policy: Optional["SubscriptionDeliveryPolicyInput"] = Field(
        alias="deliveryPolicy", default=None
    )
    delivery_price: Optional[Any] = Field(alias="deliveryPrice", default=None)
    delivery_method: Optional["SubscriptionDeliveryMethodInput"] = Field(
        alias="deliveryMethod", default=None
    )
    note: Optional[str] = None
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )


class SubscriptionFreeShippingDiscountInput(BaseModel):
    title: Optional[str] = None
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )


class SubscriptionLineInput(BaseModel):
    product_variant_id: str = Field(alias="productVariantId")
    quantity: int
    current_price: Any = Field(alias="currentPrice")
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )
    selling_plan_id: Optional[str] = Field(alias="sellingPlanId", default=None)
    selling_plan_name: Optional[str] = Field(alias="sellingPlanName", default=None)
    pricing_policy: Optional["SubscriptionPricingPolicyInput"] = Field(
        alias="pricingPolicy", default=None
    )


class SubscriptionLineUpdateInput(BaseModel):
    product_variant_id: Optional[str] = Field(alias="productVariantId", default=None)
    quantity: Optional[int] = None
    selling_plan_id: Optional[str] = Field(alias="sellingPlanId", default=None)
    selling_plan_name: Optional[str] = Field(alias="sellingPlanName", default=None)
    current_price: Optional[Any] = Field(alias="currentPrice", default=None)
    custom_attributes: Optional[List["AttributeInput"]] = Field(
        alias="customAttributes", default=None
    )
    pricing_policy: Optional["SubscriptionPricingPolicyInput"] = Field(
        alias="pricingPolicy", default=None
    )


class SubscriptionManualDiscountEntitledLinesInput(BaseModel):
    all: Optional[bool] = None
    lines: Optional["SubscriptionManualDiscountLinesInput"] = None


class SubscriptionManualDiscountFixedAmountInput(BaseModel):
    amount: Optional[float] = None
    applies_on_each_item: Optional[bool] = Field(
        alias="appliesOnEachItem", default=None
    )


class SubscriptionManualDiscountInput(BaseModel):
    title: Optional[str] = None
    value: Optional["SubscriptionManualDiscountValueInput"] = None
    recurring_cycle_limit: Optional[int] = Field(
        alias="recurringCycleLimit", default=None
    )
    entitled_lines: Optional["SubscriptionManualDiscountEntitledLinesInput"] = Field(
        alias="entitledLines", default=None
    )


class SubscriptionManualDiscountLinesInput(BaseModel):
    add: Optional[List[str]] = None
    remove: Optional[List[str]] = None


class SubscriptionManualDiscountValueInput(BaseModel):
    percentage: Optional[int] = None
    fixed_amount: Optional["SubscriptionManualDiscountFixedAmountInput"] = Field(
        alias="fixedAmount", default=None
    )


class SubscriptionPricingPolicyCycleDiscountsInput(BaseModel):
    after_cycle: int = Field(alias="afterCycle")
    adjustment_type: SellingPlanPricingPolicyAdjustmentType = Field(
        alias="adjustmentType"
    )
    adjustment_value: "SellingPlanPricingPolicyValueInput" = Field(
        alias="adjustmentValue"
    )
    computed_price: Any = Field(alias="computedPrice")


class SubscriptionPricingPolicyInput(BaseModel):
    base_price: Any = Field(alias="basePrice")
    cycle_discounts: List["SubscriptionPricingPolicyCycleDiscountsInput"] = Field(
        alias="cycleDiscounts"
    )


class TranslationInput(BaseModel):
    locale: str
    key: str
    value: str
    translatable_content_digest: str = Field(alias="translatableContentDigest")
    market_id: Optional[str] = Field(alias="marketId", default=None)


class UTMInput(BaseModel):
    campaign: str
    source: str
    medium: str


class UpdateMediaInput(BaseModel):
    id: str
    preview_image_source: Optional[str] = Field(
        alias="previewImageSource", default=None
    )
    alt: Optional[str] = None


class UrlRedirectInput(BaseModel):
    path: Optional[str] = None
    target: Optional[str] = None


class ValidationCreateInput(BaseModel):
    function_id: str = Field(alias="functionId")
    enable: Optional[bool] = None
    block_on_failure: Optional[bool] = Field(alias="blockOnFailure", default=None)
    metafields: Optional[List["MetafieldInput"]] = None
    title: Optional[str] = None


class ValidationUpdateInput(BaseModel):
    enable: Optional[bool] = None
    block_on_failure: Optional[bool] = Field(alias="blockOnFailure", default=None)
    metafields: Optional[List["MetafieldInput"]] = None
    title: Optional[str] = None


class VariantOptionValueInput(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None
    option_id: Optional[str] = Field(alias="optionId", default=None)
    option_name: Optional[str] = Field(alias="optionName", default=None)


class WebPixelInput(BaseModel):
    settings: Any


class WebhookSubscriptionInput(BaseModel):
    callback_url: Optional[Any] = Field(alias="callbackUrl", default=None)
    format: Optional[WebhookSubscriptionFormat] = None
    include_fields: Optional[List[str]] = Field(alias="includeFields", default=None)
    metafield_namespaces: Optional[List[str]] = Field(
        alias="metafieldNamespaces", default=None
    )


class WeightInput(BaseModel):
    value: float
    unit: WeightUnit
