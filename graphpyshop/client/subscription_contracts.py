# Generated by ariadne-codegen
# Source: ./graphpyshop/queries

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    CountPrecision,
    CurrencyCode,
    DiscountTargetType,
    DiscountType,
    SellingPlanAnchorType,
    SellingPlanInterval,
    SellingPlanPricingPolicyAdjustmentType,
    SubscriptionContractLastPaymentStatus,
    SubscriptionContractSubscriptionStatus,
    SubscriptionDiscountRejectionReason,
)


class SubscriptionContracts(BaseModel):
    subscription_contracts: "SubscriptionContractsSubscriptionContracts" = Field(
        alias="subscriptionContracts"
    )


class SubscriptionContractsSubscriptionContracts(BaseModel):
    edges: List["SubscriptionContractsSubscriptionContractsEdges"]


class SubscriptionContractsSubscriptionContractsEdges(BaseModel):
    node: "SubscriptionContractsSubscriptionContractsEdgesNode"


class SubscriptionContractsSubscriptionContractsEdgesNode(BaseModel):
    typename__: Literal["SubscriptionContract"] = Field(alias="__typename")
    id: str
    app: Optional["SubscriptionContractsSubscriptionContractsEdgesNodeApp"]
    app_admin_url: Optional[Any] = Field(alias="appAdminUrl")
    billing_policy: "SubscriptionContractsSubscriptionContractsEdgesNodeBillingPolicy" = Field(
        alias="billingPolicy"
    )
    created_at: Any = Field(alias="createdAt")
    currency_code: CurrencyCode = Field(alias="currencyCode")
    custom_attributes: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeCustomAttributes"
    ] = Field(alias="customAttributes")
    customer: Optional["SubscriptionContractsSubscriptionContractsEdgesNodeCustomer"]
    customer_payment_method: Optional[
        "SubscriptionContractsSubscriptionContractsEdgesNodeCustomerPaymentMethod"
    ] = Field(alias="customerPaymentMethod")
    delivery_policy: "SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPolicy" = Field(
        alias="deliveryPolicy"
    )
    delivery_price: "SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPrice" = Field(
        alias="deliveryPrice"
    )
    id: str
    last_payment_status: Optional[SubscriptionContractLastPaymentStatus] = Field(
        alias="lastPaymentStatus"
    )
    lines_count: Optional[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesCount"
    ] = Field(alias="linesCount")
    next_billing_date: Optional[Any] = Field(alias="nextBillingDate")
    note: Optional[str]
    origin_order: Optional[
        "SubscriptionContractsSubscriptionContractsEdgesNodeOriginOrder"
    ] = Field(alias="originOrder")
    price_breakdown_estimate: Optional[
        "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimate"
    ] = Field(alias="priceBreakdownEstimate")
    revision_id: Any = Field(alias="revisionId")
    status: SubscriptionContractSubscriptionStatus
    updated_at: Any = Field(alias="updatedAt")
    discounts: "SubscriptionContractsSubscriptionContractsEdgesNodeDiscounts"
    lines: "SubscriptionContractsSubscriptionContractsEdgesNodeLines"


class SubscriptionContractsSubscriptionContractsEdgesNodeApp(BaseModel):
    id: str
    handle: Optional[str]


class SubscriptionContractsSubscriptionContractsEdgesNodeBillingPolicy(BaseModel):
    interval: SellingPlanInterval
    interval_count: int = Field(alias="intervalCount")
    anchors: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeBillingPolicyAnchors"
    ]
    max_cycles: Optional[int] = Field(alias="maxCycles")
    min_cycles: Optional[int] = Field(alias="minCycles")


class SubscriptionContractsSubscriptionContractsEdgesNodeBillingPolicyAnchors(
    BaseModel
):
    day: int
    month: Optional[int]
    type: SellingPlanAnchorType
    cutoff_day: Optional[int] = Field(alias="cutoffDay")


class SubscriptionContractsSubscriptionContractsEdgesNodeCustomAttributes(BaseModel):
    key: str
    value: Optional[str]


class SubscriptionContractsSubscriptionContractsEdgesNodeCustomer(BaseModel):
    id: str
    display_name: str = Field(alias="displayName")
    email: Optional[str]


class SubscriptionContractsSubscriptionContractsEdgesNodeCustomerPaymentMethod(
    BaseModel
):
    id: str


class SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPolicy(BaseModel):
    interval: SellingPlanInterval
    interval_count: int = Field(alias="intervalCount")
    anchors: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPolicyAnchors"
    ]


class SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPolicyAnchors(
    BaseModel
):
    day: int
    month: Optional[int]
    type: SellingPlanAnchorType
    cutoff_day: Optional[int] = Field(alias="cutoffDay")


class SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPrice(BaseModel):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesCount(BaseModel):
    count: int
    precision: CountPrecision


class SubscriptionContractsSubscriptionContractsEdgesNodeOriginOrder(BaseModel):
    id: str
    name: str


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimate(
    BaseModel
):
    subtotal_price: "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateSubtotalPrice" = Field(
        alias="subtotalPrice"
    )
    taxes_included: bool = Field(alias="taxesIncluded")
    total_discounts: "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalDiscounts" = Field(
        alias="totalDiscounts"
    )
    total_price: "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalPrice" = Field(
        alias="totalPrice"
    )
    total_shipping_price: "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalShippingPrice" = Field(
        alias="totalShippingPrice"
    )
    total_tax: "SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalTax" = Field(
        alias="totalTax"
    )


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateSubtotalPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalDiscounts(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalShippingPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimateTotalTax(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscounts(BaseModel):
    edges: List["SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdges"]


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdges(BaseModel):
    node: "SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNode"


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNode(BaseModel):
    typename__: Literal["SubscriptionManualDiscount"] = Field(alias="__typename")
    entitled_lines: "SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeEntitledLines" = Field(
        alias="entitledLines"
    )
    id: str
    recurring_cycle_limit: Optional[int] = Field(alias="recurringCycleLimit")
    rejection_reason: Optional[SubscriptionDiscountRejectionReason] = Field(
        alias="rejectionReason"
    )
    target_type: DiscountTargetType = Field(alias="targetType")
    title: Optional[str]
    type: DiscountType
    usage_count: int = Field(alias="usageCount")
    value: Union[
        "SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountFixedAmountValue",
        "SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountPercentageValue",
    ] = Field(discriminator="typename__")


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeEntitledLines(
    BaseModel
):
    all: bool


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountFixedAmountValue(
    BaseModel
):
    typename__: Literal["SubscriptionDiscountFixedAmountValue"] = Field(
        alias="__typename"
    )
    amount: "SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountFixedAmountValueAmount"
    applies_on_each_item: bool = Field(alias="appliesOnEachItem")


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountFixedAmountValueAmount(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountPercentageValue(
    BaseModel
):
    typename__: Literal["SubscriptionDiscountPercentageValue"] = Field(
        alias="__typename"
    )
    percentage: int


class SubscriptionContractsSubscriptionContractsEdgesNodeLines(BaseModel):
    edges: List["SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdges"]


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdges(BaseModel):
    node: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNode"


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNode(BaseModel):
    typename__: Literal["SubscriptionLine"] = Field(alias="__typename")
    id: str
    current_price: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeCurrentPrice" = Field(
        alias="currentPrice"
    )
    custom_attributes: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeCustomAttributes"
    ] = Field(alias="customAttributes")
    discount_allocations: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocations"
    ] = Field(alias="discountAllocations")
    line_discounted_price: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeLineDiscountedPrice" = Field(
        alias="lineDiscountedPrice"
    )
    pricing_policy: Optional[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicy"
    ] = Field(alias="pricingPolicy")
    product_id: Optional[str] = Field(alias="productId")
    quantity: int
    requires_shipping: bool = Field(alias="requiresShipping")
    selling_plan_id: Optional[str] = Field(alias="sellingPlanId")
    selling_plan_name: Optional[str] = Field(alias="sellingPlanName")
    sku: Optional[str]
    taxable: bool
    title: str
    variant_id: Optional[str] = Field(alias="variantId")
    variant_title: Optional[str] = Field(alias="variantTitle")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeCurrentPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeCustomAttributes(
    BaseModel
):
    key: str
    value: Optional[str]


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocations(
    BaseModel
):
    amount: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsAmount"
    discount: Union[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionAppliedCodeDiscount",
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscount",
    ] = Field(discriminator="typename__")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsAmount(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionAppliedCodeDiscount(
    BaseModel
):
    typename__: Literal["SubscriptionAppliedCodeDiscount"] = Field(alias="__typename")
    id: str
    redeem_code: str = Field(alias="redeemCode")
    rejection_reason: Optional[SubscriptionDiscountRejectionReason] = Field(
        alias="rejectionReason"
    )


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscount(
    BaseModel
):
    typename__: Literal["SubscriptionManualDiscount"] = Field(alias="__typename")
    entitled_lines: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountEntitledLines" = Field(
        alias="entitledLines"
    )
    id: str
    recurring_cycle_limit: Optional[int] = Field(alias="recurringCycleLimit")
    rejection_reason: Optional[SubscriptionDiscountRejectionReason] = Field(
        alias="rejectionReason"
    )
    target_type: DiscountTargetType = Field(alias="targetType")
    title: Optional[str]
    type: DiscountType
    usage_count: int = Field(alias="usageCount")
    value: Union[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountFixedAmountValue",
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountPercentageValue",
    ] = Field(discriminator="typename__")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountEntitledLines(
    BaseModel
):
    all: bool


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountFixedAmountValue(
    BaseModel
):
    typename__: Literal["SubscriptionDiscountFixedAmountValue"] = Field(
        alias="__typename"
    )
    amount: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountFixedAmountValueAmount"
    applies_on_each_item: bool = Field(alias="appliesOnEachItem")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountFixedAmountValueAmount(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountPercentageValue(
    BaseModel
):
    typename__: Literal["SubscriptionDiscountPercentageValue"] = Field(
        alias="__typename"
    )
    percentage: int


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeLineDiscountedPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicy(
    BaseModel
):
    base_price: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyBasePrice" = Field(
        alias="basePrice"
    )
    cycle_discounts: List[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscounts"
    ] = Field(alias="cycleDiscounts")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyBasePrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscounts(
    BaseModel
):
    adjustment_type: SellingPlanPricingPolicyAdjustmentType = Field(
        alias="adjustmentType"
    )
    adjustment_value: Union[
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsAdjustmentValueMoneyV2",
        "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsAdjustmentValueSellingPlanPricingPolicyPercentageValue",
    ] = Field(alias="adjustmentValue", discriminator="typename__")
    after_cycle: int = Field(alias="afterCycle")
    computed_price: "SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsComputedPrice" = Field(
        alias="computedPrice"
    )


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsAdjustmentValueMoneyV2(
    BaseModel
):
    typename__: Literal["MoneyV2"] = Field(alias="__typename")
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsAdjustmentValueSellingPlanPricingPolicyPercentageValue(
    BaseModel
):
    typename__: Literal["SellingPlanPricingPolicyPercentageValue"] = Field(
        alias="__typename"
    )
    percentage: float


class SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscountsComputedPrice(
    BaseModel
):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


SubscriptionContracts.model_rebuild()
SubscriptionContractsSubscriptionContracts.model_rebuild()
SubscriptionContractsSubscriptionContractsEdges.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNode.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeBillingPolicy.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeDeliveryPolicy.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodePriceBreakdownEstimate.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeDiscounts.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdges.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNode.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeDiscountsEdgesNodeValueSubscriptionDiscountFixedAmountValue.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLines.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdges.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNode.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocations.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscount.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodeDiscountAllocationsDiscountSubscriptionManualDiscountValueSubscriptionDiscountFixedAmountValue.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicy.model_rebuild()
SubscriptionContractsSubscriptionContractsEdgesNodeLinesEdgesNodePricingPolicyCycleDiscounts.model_rebuild()
