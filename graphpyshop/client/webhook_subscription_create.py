# Generated by ariadne-codegen
# Source: ./graphpyshop/queries

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import WebhookSubscriptionFormat, WebhookSubscriptionTopic


class WebhookSubscriptionCreate(BaseModel):
    webhook_subscription_create: Optional[
        "WebhookSubscriptionCreateWebhookSubscriptionCreate"
    ] = Field(alias="webhookSubscriptionCreate")


class WebhookSubscriptionCreateWebhookSubscriptionCreate(BaseModel):
    webhook_subscription: Optional[
        "WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscription"
    ] = Field(alias="webhookSubscription")
    user_errors: List[
        "WebhookSubscriptionCreateWebhookSubscriptionCreateUserErrors"
    ] = Field(alias="userErrors")


class WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscription(BaseModel):
    id: str
    topic: WebhookSubscriptionTopic
    format: WebhookSubscriptionFormat
    created_at: Any = Field(alias="createdAt")
    updated_at: Any = Field(alias="updatedAt")
    api_version: "WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionApiVersion" = Field(
        alias="apiVersion"
    )
    endpoint: Union[
        "WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookEventBridgeEndpoint",
        "WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookHttpEndpoint",
        "WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookPubSubEndpoint",
    ] = Field(discriminator="typename__")
    include_fields: List[str] = Field(alias="includeFields")
    legacy_resource_id: Any = Field(alias="legacyResourceId")
    metafield_namespaces: List[str] = Field(alias="metafieldNamespaces")
    sub_topic: Optional[str] = Field(alias="subTopic")


class WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionApiVersion(
    BaseModel
):
    display_name: str = Field(alias="displayName")
    handle: str
    supported: bool


class WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookEventBridgeEndpoint(
    BaseModel
):
    typename__: Literal["WebhookEventBridgeEndpoint"] = Field(alias="__typename")
    arn: Any


class WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookHttpEndpoint(
    BaseModel
):
    typename__: Literal["WebhookHttpEndpoint"] = Field(alias="__typename")
    callback_url: Any = Field(alias="callbackUrl")


class WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscriptionEndpointWebhookPubSubEndpoint(
    BaseModel
):
    typename__: Literal["WebhookPubSubEndpoint"] = Field(alias="__typename")
    pub_sub_project: str = Field(alias="pubSubProject")
    pub_sub_topic: str = Field(alias="pubSubTopic")


class WebhookSubscriptionCreateWebhookSubscriptionCreateUserErrors(BaseModel):
    field: Optional[List[str]]
    message: str


WebhookSubscriptionCreate.model_rebuild()
WebhookSubscriptionCreateWebhookSubscriptionCreate.model_rebuild()
WebhookSubscriptionCreateWebhookSubscriptionCreateWebhookSubscription.model_rebuild()
