# Generated by ariadne-codegen
# Source: ./graphpyshop/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    CountryCode,
    CurrencyCode,
    CustomerConsentCollectedFrom,
    CustomerEmailMarketingState,
    CustomerMarketingOptInLevel,
    CustomerPredictedSpendTier,
    CustomerProductSubscriberStatus,
    CustomerSmsMarketingState,
    CustomerState,
)


class Customers(BaseModel):
    customers: "CustomersCustomers"


class CustomersCustomers(BaseModel):
    edges: List["CustomersCustomersEdges"]


class CustomersCustomersEdges(BaseModel):
    node: "CustomersCustomersEdgesNode"


class CustomersCustomersEdgesNode(BaseModel):
    id: str
    first_name: Optional[str] = Field(alias="firstName")
    last_name: Optional[str] = Field(alias="lastName")
    email_marketing_consent: Optional[
        "CustomersCustomersEdgesNodeEmailMarketingConsent"
    ] = Field(alias="emailMarketingConsent")
    sms_marketing_consent: Optional[
        "CustomersCustomersEdgesNodeSmsMarketingConsent"
    ] = Field(alias="smsMarketingConsent")
    state: CustomerState
    email: Optional[str]
    phone: Optional[str]
    amount_spent: "CustomersCustomersEdgesNodeAmountSpent" = Field(alias="amountSpent")
    created_at: Any = Field(alias="createdAt")
    updated_at: Any = Field(alias="updatedAt")
    note: Optional[str]
    verified_email: bool = Field(alias="verifiedEmail")
    valid_email_address: bool = Field(alias="validEmailAddress")
    tags: List[str]
    lifetime_duration: str = Field(alias="lifetimeDuration")
    product_subscriber_status: CustomerProductSubscriberStatus = Field(
        alias="productSubscriberStatus"
    )
    statistics: "CustomersCustomersEdgesNodeStatistics"
    default_address: Optional["CustomersCustomersEdgesNodeDefaultAddress"] = Field(
        alias="defaultAddress"
    )
    addresses: List["CustomersCustomersEdgesNodeAddresses"]
    image: "CustomersCustomersEdgesNodeImage"
    can_delete: bool = Field(alias="canDelete")


class CustomersCustomersEdgesNodeEmailMarketingConsent(BaseModel):
    consent_updated_at: Optional[Any] = Field(alias="consentUpdatedAt")
    marketing_opt_in_level: Optional[CustomerMarketingOptInLevel] = Field(
        alias="marketingOptInLevel"
    )
    marketing_state: CustomerEmailMarketingState = Field(alias="marketingState")


class CustomersCustomersEdgesNodeSmsMarketingConsent(BaseModel):
    consent_collected_from: Optional[CustomerConsentCollectedFrom] = Field(
        alias="consentCollectedFrom"
    )
    consent_updated_at: Optional[Any] = Field(alias="consentUpdatedAt")
    marketing_opt_in_level: CustomerMarketingOptInLevel = Field(
        alias="marketingOptInLevel"
    )
    marketing_state: CustomerSmsMarketingState = Field(alias="marketingState")


class CustomersCustomersEdgesNodeAmountSpent(BaseModel):
    amount: Any
    currency_code: CurrencyCode = Field(alias="currencyCode")


class CustomersCustomersEdgesNodeStatistics(BaseModel):
    predicted_spend_tier: Optional[CustomerPredictedSpendTier] = Field(
        alias="predictedSpendTier"
    )


class CustomersCustomersEdgesNodeDefaultAddress(BaseModel):
    address_1: Optional[str] = Field(alias="address1")
    address_2: Optional[str] = Field(alias="address2")
    city: Optional[str]
    company: Optional[str]
    coordinates_validated: bool = Field(alias="coordinatesValidated")
    country: Optional[str]
    country_code_v_2: Optional[CountryCode] = Field(alias="countryCodeV2")
    first_name: Optional[str] = Field(alias="firstName")
    formatted: List[str]
    formatted_area: Optional[str] = Field(alias="formattedArea")
    id: str
    last_name: Optional[str] = Field(alias="lastName")
    latitude: Optional[float]
    longitude: Optional[float]
    name: Optional[str]
    phone: Optional[str]
    province: Optional[str]
    province_code: Optional[str] = Field(alias="provinceCode")
    time_zone: Optional[str] = Field(alias="timeZone")
    zip: Optional[str]


class CustomersCustomersEdgesNodeAddresses(BaseModel):
    address_1: Optional[str] = Field(alias="address1")
    address_2: Optional[str] = Field(alias="address2")
    city: Optional[str]
    company: Optional[str]
    coordinates_validated: bool = Field(alias="coordinatesValidated")
    country: Optional[str]
    country_code_v_2: Optional[CountryCode] = Field(alias="countryCodeV2")
    first_name: Optional[str] = Field(alias="firstName")
    formatted: List[str]
    formatted_area: Optional[str] = Field(alias="formattedArea")
    id: str
    last_name: Optional[str] = Field(alias="lastName")
    latitude: Optional[float]
    longitude: Optional[float]
    name: Optional[str]
    phone: Optional[str]
    province: Optional[str]
    province_code: Optional[str] = Field(alias="provinceCode")
    time_zone: Optional[str] = Field(alias="timeZone")
    zip: Optional[str]


class CustomersCustomersEdgesNodeImage(BaseModel):
    src: Any


Customers.model_rebuild()
CustomersCustomers.model_rebuild()
CustomersCustomersEdges.model_rebuild()
CustomersCustomersEdgesNode.model_rebuild()
