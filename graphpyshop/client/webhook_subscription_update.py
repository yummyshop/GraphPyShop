# Generated by ariadne-codegen
# Source: ./graphpyshop/queries

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import WebhookSubscriptionFormat, WebhookSubscriptionTopic


class WebhookSubscriptionUpdate(BaseModel):
    webhook_subscription_update: Optional[
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdate"
    ] = Field(alias="webhookSubscriptionUpdate")


class WebhookSubscriptionUpdateWebhookSubscriptionUpdate(BaseModel):
    webhook_subscription: Optional[
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscription"
    ] = Field(alias="webhookSubscription")
    user_errors: List[
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdateUserErrors"
    ] = Field(alias="userErrors")


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscription(BaseModel):
    id: str
    topic: WebhookSubscriptionTopic
    format: WebhookSubscriptionFormat
    created_at: Any = Field(alias="createdAt")
    updated_at: Any = Field(alias="updatedAt")
    api_version: "WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionApiVersion" = Field(
        alias="apiVersion"
    )
    endpoint: Union[
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookEventBridgeEndpoint",
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookHttpEndpoint",
        "WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookPubSubEndpoint",
    ] = Field(discriminator="typename__")
    include_fields: List[str] = Field(alias="includeFields")
    legacy_resource_id: Any = Field(alias="legacyResourceId")
    metafield_namespaces: List[str] = Field(alias="metafieldNamespaces")
    sub_topic: Optional[str] = Field(alias="subTopic")


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionApiVersion(
    BaseModel
):
    display_name: str = Field(alias="displayName")
    handle: str
    supported: bool


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookEventBridgeEndpoint(
    BaseModel
):
    typename__: Literal["WebhookEventBridgeEndpoint"] = Field(alias="__typename")
    arn: Any


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookHttpEndpoint(
    BaseModel
):
    typename__: Literal["WebhookHttpEndpoint"] = Field(alias="__typename")
    callback_url: Any = Field(alias="callbackUrl")


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscriptionEndpointWebhookPubSubEndpoint(
    BaseModel
):
    typename__: Literal["WebhookPubSubEndpoint"] = Field(alias="__typename")
    pub_sub_project: str = Field(alias="pubSubProject")
    pub_sub_topic: str = Field(alias="pubSubTopic")


class WebhookSubscriptionUpdateWebhookSubscriptionUpdateUserErrors(BaseModel):
    field: Optional[List[str]]
    message: str


WebhookSubscriptionUpdate.model_rebuild()
WebhookSubscriptionUpdateWebhookSubscriptionUpdate.model_rebuild()
WebhookSubscriptionUpdateWebhookSubscriptionUpdateWebhookSubscription.model_rebuild()
