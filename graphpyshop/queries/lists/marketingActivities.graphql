query marketingActivities($transform: ImageTransformInput, $url_transform_Image: ImageTransformInput, $marketingActivityIds: [ID!] = [], $remoteIds: [String!] = [], $utm: UTMInput, $first: Int = 250, $after: String, $last: Int, $before: String, $reverse: Boolean = false, $sortKey: MarketingActivitySortKeys = CREATED_AT, $query: String, $savedSearchId: ID) {
  marketingActivities(
    marketingActivityIds: $marketingActivityIds
    remoteIds: $remoteIds
    utm: $utm
    first: $first
    after: $after
    last: $last
    before: $before
    reverse: $reverse
    sortKey: $sortKey
    query: $query
    savedSearchId: $savedSearchId
  ) {
    edges {
      cursor
      node {
        activityListUrl
        adSpend {
          amount
          currencyCode
          __typename
        }
        adminEditUrl
        app {
          id
          __typename
        }
        appErrors {
          code
          userErrors {
            field
            message
            __typename
          }
          __typename
        }
        automationStepType
        automationTriggerDescription
        budget {
          budgetType
          total {
            amount
            currencyCode
            __typename
          }
          __typename
        }
        createdAt
        errorOccurredAt
        flowEditorUrl
        formData
        hierarchyLevel
        id
        inMainWorkflowVersion
        isExternal
        marketingChannelType
        marketingEvent {
          id
          __typename
        }
        parentActivityId
        parentRemoteId
        scheduledToEndAt
        scheduledToStartAt
        sourceAndMedium
        status
        statusBadgeTypeV2
        statusLabel
        statusTransitionedAt
        tactic
        targetStatus
        title
        trackingOpens
        updatedAt
        urlParameterValue
        utmParameters {
          campaign
          content
          medium
          source
          term
          __typename
        }
        __typename
      }
      __typename
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
      __typename
    }
    __typename
  }
}