query companyContact($draftOrders_first: Int = 250, $draftOrders_after: String, $draftOrders_last: Int, $draftOrders_before: String, $draftOrders_reverse: Boolean = false, $draftOrders_sortKey: DraftOrderSortKeys = ID, $draftOrders_query: String, $orders_first: Int = 250, $orders_after: String, $orders_last: Int, $orders_before: String, $orders_reverse: Boolean = false, $orders_sortKey: OrderSortKeys = ID, $roleAssignments_first: Int = 250, $roleAssignments_after: String, $roleAssignments_last: Int, $roleAssignments_before: String, $roleAssignments_reverse: Boolean = false, $roleAssignments_sortKey: CompanyContactRoleAssignmentSortKeys = ID, $roleAssignments_query: String, $companyContact_id: ID!) {
  companyContact(id: $companyContact_id) {
    company {
      id
    }
    createdAt
    customer {
      id
    }
    draftOrders(
      first: $draftOrders_first
      after: $draftOrders_after
      last: $draftOrders_last
      before: $draftOrders_before
      reverse: $draftOrders_reverse
      sortKey: $draftOrders_sortKey
      query: $draftOrders_query
    ) {
      edges {
        cursor
        node {
          id
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    id
    isMainContact
    lifetimeDuration
    locale
    orders(
      first: $orders_first
      after: $orders_after
      last: $orders_last
      before: $orders_before
      reverse: $orders_reverse
      sortKey: $orders_sortKey
    ) {
      edges {
        cursor
        node {
          id
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    roleAssignments(
      first: $roleAssignments_first
      after: $roleAssignments_after
      last: $roleAssignments_last
      before: $roleAssignments_before
      reverse: $roleAssignments_reverse
      sortKey: $roleAssignments_sortKey
      query: $roleAssignments_query
    ) {
      edges {
        cursor
        node {
          createdAt
          id
          updatedAt
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    title
    updatedAt
  }
}