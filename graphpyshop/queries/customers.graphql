query customers($formatted_withName: Boolean = false, $formatted_withCompany: Boolean = true, $addresses_first: Int = 250, $events_first: Int = 250, $events_after: String, $events_last: Int, $events_before: String, $events_reverse: Boolean = false, $events_sortKey: EventSortKeys = ID, $events_query: String, $url_transform: ImageTransformInput, $metafields_namespace: String, $metafields_keys: [String!], $metafields_first: Int = 250, $metafields_after: String, $metafields_last: Int, $metafields_before: String, $metafields_reverse: Boolean = false, $paymentMethods_showRevoked: Boolean = false, $paymentMethods_showWithPreauthorizedPayments: Boolean = false, $paymentMethods_first: Int = 250, $paymentMethods_after: String, $paymentMethods_last: Int, $paymentMethods_before: String, $paymentMethods_reverse: Boolean = false, $customers_first: Int = 250, $customers_after: String, $customers_last: Int, $customers_before: String, $customers_reverse: Boolean = false, $customers_sortKey: CustomerSortKeys = ID, $customers_query: String) {
  customers(
    first: $customers_first
    after: $customers_after
    last: $customers_last
    before: $customers_before
    reverse: $customers_reverse
    sortKey: $customers_sortKey
    query: $customers_query
  ) {
    edges {
      cursor
      node {
        addresses(first: $addresses_first) {
          address1
          address2
          city
          company
          coordinatesValidated
          country
          countryCodeV2
          firstName
          formatted(withName: $formatted_withName, withCompany: $formatted_withCompany)
          formattedArea
          id
          lastName
          latitude
          longitude
          name
          phone
          province
          provinceCode
          timeZone
          zip
        }
        amountSpent {
          amount
          currencyCode
        }
        canDelete
        companyContactProfiles {
          createdAt
          id
          isMainContact
          lifetimeDuration
          locale
          title
          updatedAt
        }
        createdAt
        defaultAddress {
          address1
          address2
          city
          company
          coordinatesValidated
          country
          countryCodeV2
          firstName
          formatted(withName: $formatted_withName, withCompany: $formatted_withCompany)
          formattedArea
          id
          lastName
          latitude
          longitude
          name
          phone
          province
          provinceCode
          timeZone
          zip
        }
        displayName
        email
        emailMarketingConsent {
          consentUpdatedAt
          marketingOptInLevel
          marketingState
        }
        events(
          first: $events_first
          after: $events_after
          last: $events_last
          before: $events_before
          reverse: $events_reverse
          sortKey: $events_sortKey
          query: $events_query
        ) {
          edges {
            cursor
            node {
              ... on BasicEvent {
                appTitle
                attributeToApp
                attributeToUser
                createdAt
                criticalAlert
                id
                message
              }
              ... on CommentEvent {
                appTitle
                attributeToApp
                attributeToUser
                canDelete
                canEdit
                createdAt
                criticalAlert
                edited
                id
                message
                rawMessage
              }
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        firstName
        id
        image {
          altText
          height
          id
          thumbhash
          url(transform: $url_transform)
          width
        }
        lastName
        legacyResourceId
        lifetimeDuration
        locale
        mergeable {
          errorFields
          isMergeable
          reason
        }
        metafields(
          namespace: $metafields_namespace
          keys: $metafields_keys
          first: $metafields_first
          after: $metafields_after
          last: $metafields_last
          before: $metafields_before
          reverse: $metafields_reverse
        ) {
          edges {
            cursor
            node {
              createdAt
              description
              id
              key
              legacyResourceId
              namespace
              ownerType
              type
              updatedAt
              value
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        multipassIdentifier
        note
        numberOfOrders
        paymentMethods(
          showRevoked: $paymentMethods_showRevoked
          showWithPreauthorizedPayments: $paymentMethods_showWithPreauthorizedPayments
          first: $paymentMethods_first
          after: $paymentMethods_after
          last: $paymentMethods_last
          before: $paymentMethods_before
          reverse: $paymentMethods_reverse
        ) {
          edges {
            cursor
            node {
              id
              revokedAt
              revokedReason
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        phone
        productSubscriberStatus
        smsMarketingConsent {
          consentCollectedFrom
          consentUpdatedAt
          marketingOptInLevel
          marketingState
        }
        state
        statistics {
          predictedSpendTier
        }
        tags
        taxExempt
        taxExemptions
        unsubscribeUrl
        updatedAt
        validEmailAddress
        verifiedEmail
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}