query shopifyPaymentsAccount($balanceTransactions_hideTransfers: Boolean = false, $balanceTransactions_first: Int = 250, $balanceTransactions_after: String, $balanceTransactions_last: Int, $balanceTransactions_before: String, $balanceTransactions_reverse: Boolean = false, $balanceTransactions_sortKey: BalanceTransactionSortKeys = PROCESSED_AT, $balanceTransactions_query: String, $balanceTransactions_savedSearchId: ID, $bankAccounts_first: Int = 250, $bankAccounts_after: String, $bankAccounts_last: Int, $bankAccounts_before: String, $bankAccounts_reverse: Boolean = false, $disputes_first: Int = 250, $disputes_after: String, $disputes_last: Int, $disputes_before: String, $disputes_reverse: Boolean = false, $disputes_query: String, $payouts_transactionType: ShopifyPaymentsPayoutTransactionType, $payouts_first: Int = 250, $payouts_after: String, $payouts_last: Int, $payouts_before: String, $payouts_reverse: Boolean = false) {
  shopifyPaymentsAccount {
    activated
    balance {
      amount
      currencyCode
    }
    balanceTransactions(
      hideTransfers: $balanceTransactions_hideTransfers
      first: $balanceTransactions_first
      after: $balanceTransactions_after
      last: $balanceTransactions_last
      before: $balanceTransactions_before
      reverse: $balanceTransactions_reverse
      sortKey: $balanceTransactions_sortKey
      query: $balanceTransactions_query
      savedSearchId: $balanceTransactions_savedSearchId
    ) {
      edges {
        cursor
        node {
          id
          sourceType
          test
          transactionDate
          type
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    bankAccounts(
      first: $bankAccounts_first
      after: $bankAccounts_after
      last: $bankAccounts_last
      before: $bankAccounts_before
      reverse: $bankAccounts_reverse
    ) {
      edges {
        cursor
        node {
          accountNumber
          accountNumberLastDigits
          bankName
          country
          createdAt
          currency
          id
          routingNumber
          status
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    chargeStatementDescriptors {
      ... on ShopifyPaymentsDefaultChargeStatementDescriptor {
        default
        prefix
      }
      ... on ShopifyPaymentsJpChargeStatementDescriptor {
        default
        kana
        kanji
        prefix
      }
    }
    country
    defaultCurrency
    disputes(
      first: $disputes_first
      after: $disputes_after
      last: $disputes_last
      before: $disputes_before
      reverse: $disputes_reverse
      query: $disputes_query
    ) {
      edges {
        cursor
        node {
          evidenceDueBy
          evidenceSentOn
          finalizedOn
          id
          initiatedAt
          legacyResourceId
          status
          type
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
    id
    onboardable
    payoutSchedule {
      interval
      monthlyAnchor
      weeklyAnchor
    }
    payoutStatementDescriptor
    payouts(
      transactionType: $payouts_transactionType
      first: $payouts_first
      after: $payouts_after
      last: $payouts_last
      before: $payouts_before
      reverse: $payouts_reverse
    ) {
      edges {
        cursor
        node {
          id
          issuedAt
          legacyResourceId
          status
          transactionType
        }
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}