query companies($contactRoles_first: Int = 250, $contactRoles_after: String, $contactRoles_last: Int, $contactRoles_before: String, $contactRoles_reverse: Boolean = false, $contactRoles_sortKey: CompanyContactRoleSortKeys = ID, $contacts_first: Int = 250, $contacts_after: String, $contacts_last: Int, $contacts_before: String, $contacts_reverse: Boolean = false, $contacts_sortKey: CompanyContactSortKeys = ID, $contacts_query: String, $draftOrders_first: Int = 250, $draftOrders_after: String, $draftOrders_last: Int, $draftOrders_before: String, $draftOrders_reverse: Boolean = false, $draftOrders_sortKey: DraftOrderSortKeys = ID, $draftOrders_query: String, $events_first: Int = 250, $events_after: String, $events_last: Int, $events_before: String, $events_reverse: Boolean = false, $events_sortKey: EventSortKeys = ID, $events_query: String, $metafields_namespace: String, $metafields_keys: [String!], $metafields_first: Int = 250, $metafields_after: String, $metafields_last: Int, $metafields_before: String, $metafields_reverse: Boolean = false, $orders_first: Int = 250, $orders_after: String, $orders_last: Int, $orders_before: String, $orders_reverse: Boolean = false, $orders_sortKey: OrderSortKeys = ID, $orders_query: String, $companies_first: Int = 250, $companies_after: String, $companies_last: Int, $companies_before: String, $companies_reverse: Boolean = false, $companies_sortKey: CompanySortKeys = ID, $companies_query: String) {
  companies(
    first: $companies_first
    after: $companies_after
    last: $companies_last
    before: $companies_before
    reverse: $companies_reverse
    sortKey: $companies_sortKey
    query: $companies_query
  ) {
    edges {
      cursor
      node {
        contactRoles(
          first: $contactRoles_first
          after: $contactRoles_after
          last: $contactRoles_last
          before: $contactRoles_before
          reverse: $contactRoles_reverse
          sortKey: $contactRoles_sortKey
        ) {
          edges {
            cursor
            node {
              id
              name
              note
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        contacts(
          first: $contacts_first
          after: $contacts_after
          last: $contacts_last
          before: $contacts_before
          reverse: $contacts_reverse
          sortKey: $contacts_sortKey
          query: $contacts_query
        ) {
          edges {
            cursor
            node {
              createdAt
              id
              isMainContact
              lifetimeDuration
              locale
              title
              updatedAt
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        contactsCount {
          count
          precision
        }
        createdAt
        customerSince
        defaultCursor
        defaultRole {
          id
          name
          note
        }
        draftOrders(
          first: $draftOrders_first
          after: $draftOrders_after
          last: $draftOrders_last
          before: $draftOrders_before
          reverse: $draftOrders_reverse
          sortKey: $draftOrders_sortKey
          query: $draftOrders_query
        ) {
          edges {
            cursor
            node {
              id
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        events(
          first: $events_first
          after: $events_after
          last: $events_last
          before: $events_before
          reverse: $events_reverse
          sortKey: $events_sortKey
          query: $events_query
        ) {
          edges {
            cursor
            node {
              ... on BasicEvent {
                appTitle
                attributeToApp
                attributeToUser
                createdAt
                criticalAlert
                id
                message
              }
              ... on CommentEvent {
                appTitle
                attributeToApp
                attributeToUser
                canDelete
                canEdit
                createdAt
                criticalAlert
                edited
                id
                message
                rawMessage
              }
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        externalId
        hasTimelineComment
        id
        lifetimeDuration
        locationsCount {
          count
          precision
        }
        mainContact {
          createdAt
          id
          isMainContact
          lifetimeDuration
          locale
          title
          updatedAt
        }
        metafields(
          namespace: $metafields_namespace
          keys: $metafields_keys
          first: $metafields_first
          after: $metafields_after
          last: $metafields_last
          before: $metafields_before
          reverse: $metafields_reverse
        ) {
          edges {
            cursor
            node {
              createdAt
              description
              id
              key
              legacyResourceId
              namespace
              ownerType
              type
              updatedAt
              value
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        name
        note
        orders(
          first: $orders_first
          after: $orders_after
          last: $orders_last
          before: $orders_before
          reverse: $orders_reverse
          sortKey: $orders_sortKey
          query: $orders_query
        ) {
          edges {
            cursor
            node {
              id
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        ordersCount {
          count
          precision
        }
        totalSpent {
          amount
          currencyCode
        }
        updatedAt
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}