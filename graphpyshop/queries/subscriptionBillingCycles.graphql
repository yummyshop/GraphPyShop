query subscriptionBillingCycles($billingAttempts_first: Int = 250, $billingAttempts_after: String, $billingAttempts_last: Int, $billingAttempts_before: String, $billingAttempts_reverse: Boolean = false, $subscriptionBillingCycles_contractId: ID!, $subscriptionBillingCycles_billingCyclesDateRangeSelector: SubscriptionBillingCyclesDateRangeSelector, $subscriptionBillingCycles_billingCyclesIndexRangeSelector: SubscriptionBillingCyclesIndexRangeSelector, $subscriptionBillingCycles_first: Int = 250, $subscriptionBillingCycles_after: String, $subscriptionBillingCycles_last: Int, $subscriptionBillingCycles_before: String, $subscriptionBillingCycles_reverse: Boolean = false, $subscriptionBillingCycles_sortKey: SubscriptionBillingCyclesSortKeys = CYCLE_INDEX) {
  subscriptionBillingCycles(
    contractId: $subscriptionBillingCycles_contractId
    billingCyclesDateRangeSelector: $subscriptionBillingCycles_billingCyclesDateRangeSelector
    billingCyclesIndexRangeSelector: $subscriptionBillingCycles_billingCyclesIndexRangeSelector
    first: $subscriptionBillingCycles_first
    after: $subscriptionBillingCycles_after
    last: $subscriptionBillingCycles_last
    before: $subscriptionBillingCycles_before
    reverse: $subscriptionBillingCycles_reverse
    sortKey: $subscriptionBillingCycles_sortKey
  ) {
    edges {
      cursor
      node {
        billingAttemptExpectedDate
        billingAttempts(
          first: $billingAttempts_first
          after: $billingAttempts_after
          last: $billingAttempts_last
          before: $billingAttempts_before
          reverse: $billingAttempts_reverse
        ) {
          edges {
            cursor
            node {
              id
            }
          }
          pageInfo {
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
          }
        }
        cycleEndAt
        cycleIndex
        cycleStartAt
        edited
        editedContract {
          appAdminUrl
          createdAt
          currencyCode
          note
          updatedAt
        }
        skipped
        sourceContract {
          id
        }
        status
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}